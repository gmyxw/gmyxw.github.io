<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on zhili</title>
    <link>https://sy123.ml/post/</link>
    <description>Recent content in Posts on zhili</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>2007-2020 zhili.</copyright>
    <lastBuildDate>Mon, 27 Jul 2020 09:52:47 +0800</lastBuildDate>
    
	<atom:link href="https://sy123.ml/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Proxychains</title>
      <link>https://sy123.ml/2020/07/27/proxychains/</link>
      <pubDate>Mon, 27 Jul 2020 09:52:47 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/07/27/proxychains/</guid>
      <description>做为Bioconductor包作者，而git push传代码到Bioconductor上是被封的。这很是恼火，随着10月份将迎来新一版本的Bioconductor发布，不能够push代码是多么惨的一件事。
代理其实也挺恼火的，因为各种协议啊，你要各种设置啊，http/https/ssh/git都是各种配置，其实我只要有一个socks5的代理，然后你们所有需要走代理的程序都通过它就好了。
谁特么有空天天在琢磨怎么配置各种不同协议的代理！只要我们想得到的，一般都有人做了。
于是万能的github上找到了proxychains。
A hook preloader that allows to redirect TCP traffic of existing dynamically linked programs through one or more SOCKS or HTTP proxies 它强制给定程序发起的TCP连接通过事先配置的代理。可以涵盖所有需要代理的情景。就以git为例，没有proxychains的话，就必须为每个协议（https, git, ssh）按照git文档的要求分别设置代理，过程复杂且不稳定。有了proxychains，这些完全可以不用管，当然应用场景不限于git，任何一个需要代理的命令行程序都是一样在运行的指令前面加proxychains完事。
Arch安装很容易：
1  yay -S proxychains-ng   安装之后，打开/etc/proxychains.conf，注释掉下面这行（disable远程DNS解析，有DNS污染风险）。
proxy_dns 最后添加如下行：
1  socks5 127.0.0.1 32997   上面这个代理是我自己机器上跑了某著名软件，用于每日科学上网。
我平时是同时push到Bioconductor和github上的，所以我不会跑完一个git push再跑一个，而是写在Makefile里，自动化这个过程，我只需要make push指令就OK。
所以此处我用的指令是：
1  proxychains make push   这样就加了代理。
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47  $ proxychains make push #### #### 实际的指令，有两条，分别push到两个服务器 #### [proxychains] config file found: /etc/proxychains.</description>
    </item>
    
    <item>
      <title>linux 使用usb声卡</title>
      <link>https://sy123.ml/2020/06/22/linux-%E4%BD%BF%E7%94%A8usb%E5%A3%B0%E5%8D%A1/</link>
      <pubDate>Mon, 22 Jun 2020 04:38:17 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/06/22/linux-%E4%BD%BF%E7%94%A8usb%E5%A3%B0%E5%8D%A1/</guid>
      <description>前言 新买了耳机发现没声音，上网查了一下发现耳机自带了usb驱动，又又又开始了折腾之旅～
解决声音问题 1 2 3 4 5 6 7 8 9  # 切换一下就完事 ~/site/blog ❯ asoundconf list Names of available sound cards: PCH Device ~/site/blog ❯ asoundconf set-default-card 1   Polybar 报错 &amp;ldquo;error: Disabling module &amp;ldquo;alsa&amp;rdquo; (reason: Could not connect pulseaudio context.)&amp;rdquo; 音乐嗨了没多久才发现顶部工具栏调不了音量，查了下日志发现报错了，后来在 issues 上找到解决方法，搞定收工
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24  ; ~/.</description>
    </item>
    
    <item>
      <title>Linux显示彩色Emoji表情</title>
      <link>https://sy123.ml/2020/05/28/linux%E6%98%BE%E7%A4%BA%E5%BD%A9%E8%89%B2emoji%E8%A1%A8%E6%83%85/</link>
      <pubDate>Thu, 28 May 2020 15:13:00 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/05/28/linux%E6%98%BE%E7%A4%BA%E5%BD%A9%E8%89%B2emoji%E8%A1%A8%E6%83%85/</guid>
      <description>前言 之前安装 noto-fonts-emoji 这个包后一直半彩色半黑白吊着，看着是真的不爽，实在太懒，今天在google意外看到很简单就解决了
解决方法 01-emoji.conf 1 2 3 4 5 6 7 8 9 10  &amp;lt;?xml version=&amp;#39;1.0&amp;#39;?&amp;gt; &amp;lt;!DOCTYPE fontconfig SYSTEM &amp;#39;fonts.dtd&amp;#39;&amp;gt; &amp;lt;fontconfig&amp;gt; &amp;lt;match target=&amp;#34;pattern&amp;#34;&amp;gt; &amp;lt;edit name=&amp;#34;family&amp;#34; mode=&amp;#34;prepend&amp;#34;&amp;gt; &amp;lt;string&amp;gt;Noto Color Emoji&amp;lt;/string&amp;gt; &amp;lt;string&amp;gt;Noto Emoji&amp;lt;/string&amp;gt; &amp;lt;/edit&amp;gt; &amp;lt;/match&amp;gt; &amp;lt;/fontconfig&amp;gt;    1 2  cp 01-emoji.conf $HOME/.config/fontconfig/conf.d/ fc-cache -f -v   重启就能显示大部分了，不过还是有一些之前没法显示，emoji还是有问题，以后再研究了
See also  https://getemoji.com/ https://www.reddit.com/r/archlinux/comments/6wkval/enable_noto_color_emoji_easily/  </description>
    </item>
    
    <item>
      <title>解决Golang在VSCode中调试时无法接收标准输入的问题</title>
      <link>https://sy123.ml/2020/05/18/%E8%A7%A3%E5%86%B3golang%E5%9C%A8vscode%E4%B8%AD%E8%B0%83%E8%AF%95%E6%97%B6%E6%97%A0%E6%B3%95%E6%8E%A5%E6%94%B6%E6%A0%87%E5%87%86%E8%BE%93%E5%85%A5%E7%9A%84%E9%97%AE%E9%A2%98/</link>
      <pubDate>Mon, 18 May 2020 04:01:27 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/05/18/%E8%A7%A3%E5%86%B3golang%E5%9C%A8vscode%E4%B8%AD%E8%B0%83%E8%AF%95%E6%97%B6%E6%97%A0%E6%B3%95%E6%8E%A5%E6%94%B6%E6%A0%87%E5%87%86%E8%BE%93%E5%85%A5%E7%9A%84%E9%97%AE%E9%A2%98/</guid>
      <description>Golang 在 VSCode 中的调试配置 （解决Golang在VSCode中调试时无法接收标准输入(stdin)的问题）
最近开始接触Go语言，但在配置VSCode的调试文件的时候发现VSCode中的官方GO插件调试时用的是调试控制台(debug console)而非终端(terminal)，找了很多设置也没有类似于terminal或者internalTerminal或者externalTerminal的配置项。最终在vscode-go仓库的issue里找到了问题所在。鉴于目前还没有国内的博客帖子总结该问题，在这里总结一下问题原因及解决方案。
问题起因 最开始以为是vscode-go插件的锅，但在相关问题的issue里，vscode-go的开发团队给出的回复是，由于delve调试器本身在普通模式运行时就无法直接接受命令行标准输入(stdin)，导致配套的相关插件也无法正常工作。本来delve自身加上支持接受命令行输入的功能即可彻底解决这个问题，但似乎delve开发团队的人员并不对此感兴趣，不少开发者也同样也对此表示无奈,只有用目前其他开发者给出的折中的解决办法。
解决方案 虽然delve在普通模式下不能接受标准输入(stdin)，但其在headless模式下是可以接受标准输入的。在VSCode中我们也可以借助这个特性来实现Golang的调试时输入功能。
以下是开发者HowieLiuX给出的参考配置：
tasks.json
{ // See https://go.microsoft.com/fwlink/?LinkId=733558 // for the documentation about the tasks.json format &amp;ldquo;version&amp;rdquo;: &amp;ldquo;2.0.0&amp;rdquo;, &amp;ldquo;tasks&amp;rdquo;: [ { &amp;ldquo;label&amp;rdquo;: &amp;ldquo;echo&amp;rdquo;, &amp;ldquo;type&amp;rdquo;: &amp;ldquo;shell&amp;rdquo;, &amp;ldquo;command&amp;rdquo;: &amp;ldquo;cd ${fileDirname} &amp;amp;&amp;amp; dlv debug &amp;ndash;headless &amp;ndash;listen=:2345 &amp;ndash;log &amp;ndash;api-version=2&amp;rdquo;, &amp;ldquo;problemMatcher&amp;rdquo;: [], &amp;ldquo;group&amp;rdquo;: { &amp;ldquo;kind&amp;rdquo;: &amp;ldquo;build&amp;rdquo;, &amp;ldquo;isDefault&amp;rdquo;: true } } ] } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 launch.</description>
    </item>
    
    <item>
      <title>Android Intent</title>
      <link>https://sy123.ml/2020/05/17/android-intent/</link>
      <pubDate>Sun, 17 May 2020 20:31:14 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/05/17/android-intent/</guid>
      <description>Intent 功能太强大了，比较常用的就是Activity （Service）之间的数据传递。举个简单例百子，在当前Activity1使用startActvity(intent)或者startActivityForResult(intent, code)方法跳转到另一个Activity2之前，如果要传递某度些String类型数据给Activity2，则会执行intent.putExtra(String str, String Key),将专String数据打包到Intent中，并给它一个Key标识。在Activity2当中，getIntent()方法获得这个intent，然后再getStringExtra(Key)，就可以获得你之前打包的那个数据了。这种机制属非常简单，也比较好用。
对于一个要执行的操作来说，Intent算作是一个抽象描述。比如通过startActivity(Intent)启动一个Activity、sendBroadcast(Intent)发送一个广播或者通过startService bindService和后台服务进行交互。
Intent为执行在不同应用不同组件之间代码的延时运行绑定提供了灵活的支持。最常见的用于启动activities，可以把Intent看做Activity之间的胶水。除此之外，Intent还持有一个数据结构来保存执行动作的抽象描述。
Intent 对象 虽说Intent是一个抽象描述，但是对于具体的Intent类来说它可以被归纳为携带一组信息的信使，正是该信使在安卓组件间进行传递才能达到信息传递的效果。
Intent 结构 一个Intent对象可以包含以下信息： Action
可以直译为动作，它是Intent的一条‘命令’。具体action以String类型来命名，Intent类中定义了许多action常量来匹配不同的Intent对象。例如ACTION_VIEW ACTION_EDIT ACTION_MAIN等。action的存取可以通过setAction()和getAction()得到。
Data
data结构是要往Intent过滤器中添加的，使用data类型（mimeType属性）通常可以解释为一个规格或者说明书，它既可以是一个Uri表达式也可以是一个mimeType。使用URI表达式时，要按顺序书写Uri每一部分的属性，注意:当使用URL属性来指定时，如果不把‘schema’指定清楚的话，所有的URI属性都被忽视。如果‘host’不指定的话，则它的‘port’和‘path’属性都被忽视。
使用setData()方法只可以设置URI属性的Data，如果设置mimeType属性的Data需要使用setType()方法。对于setDataAndType()方法既可以设置Uri也可以设置MIME，getData()和getType()分别获取URI和MIME类型。
下面是action/data 的例子：
ACTION_VIEW content://contacts/people/1 显示person表中标识符为1的联系人。 ACTION_DIAL content://contacts/people/1 显示电话拨号界面并且在显示框中显示person表中标识符为1联系人的电话号码 ACTION_VIEW tel:123 显示电话拨号界面并且在显示框中填入123. ACTION_DIAL tel:123 显示电话拨号界面并且在显示框中填入123. ACTION_EDIT content://contacts/people/1 编辑person表中标识符为1的联系人的信息。 ACTION_VIEW content://contacts/people/ 显示people列表 ACTION_SET_WALLPAPER 显示设置选择壁纸 Category
category是Intent中可选部分，以String类型命名并且包含了组件如何操作Intent的额外信息。使用addCategory()方法添加category，使用removeCategory()删除之前添加的category，getCategories()方法可以获取当前设置的category。
Extras
以键值对形式添加的一组额外信息，它将通过Intent递交给组件进行处理。extras可以通过putExtras()和getExtras()方法进行存取操作。
Flags
这里的标记主要指启动Activity的方式，也是Intent可选部分。要是单独讲解Activity启动方式就要另起篇幅了（以后的任务）。
组件名字
这部分也是Intent可选部分，通常是指具体Activity Service和BroadcastReceiver类名。如果设置了，Intent对象将被递交给这个具体的组件进行处理，否则的话，安卓将使用其他信息寻找要启动的组件。组件名字可以通过setComponent(), setClass(), 或者setClassName()来设置，通过getComponent()来获取具体的组件名字。
Intent类型 显式Intent Intent可以分为显式Intent和隐式Intent。平时我们用的最多就是显式Intent比如说在一个应用中经常要切换Activity就是使用的显式Intent。
// Explicit Intent by specifying its class name Intent i = new Intent(FirstActivity.</description>
    </item>
    
    <item>
      <title>GTK开启黑暗模式</title>
      <link>https://sy123.ml/2020/05/16/gtk%E5%BC%80%E5%90%AF%E9%BB%91%E6%9A%97%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Sat, 16 May 2020 00:33:08 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/05/16/gtk%E5%BC%80%E5%90%AF%E9%BB%91%E6%9A%97%E6%A8%A1%E5%BC%8F/</guid>
      <description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  # 安装黑暗主题 ~ ❯ sudo pacman -S gnome-themes-extra ~ ❯ cat .gtkrc gtk-icon-theme-name = &amp;#34;Adwaita-dark&amp;#34; gtk-theme-name = &amp;#34;Adwaita-dark&amp;#34; gtk-font-name = &amp;#34;Cantarell 11&amp;#34; ~ ❯ cat .config/gtk-3.0/settings.ini [Settings] gtk-icon-theme-name = Adwaita-dark gtk-theme-name = Adwaita-dark gtk-application-prefer-dark-theme = true gtk-font-name = Cantarell 11   See also https://wiki.archlinux.org/index.php/GTK</description>
    </item>
    
    <item>
      <title>How Do I Remove an Image System for Avd File in Android Studio</title>
      <link>https://sy123.ml/2020/05/15/how-do-i-remove-an-image-system-for-avd-file-in-android-studio/</link>
      <pubDate>Fri, 15 May 2020 04:26:04 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/05/15/how-do-i-remove-an-image-system-for-avd-file-in-android-studio/</guid>
      <description>I want to remove the api 16 of jelly bean but there is not remove button how can I do that. image file is very big size file so I need don&amp;rsquo;t many system image file
Go to Tools / Android / SDK Manager
Tick Show package details in the bottom right.
Untick the version(s) of Android you want to uninstall and click Ok.
Android Studio 3.6.3 In version 3.6.3 File -&amp;gt; Settings -&amp;gt; Appearance &amp;amp; Behavior -&amp;gt; System Settings -&amp;gt; Android SDK</description>
    </item>
    
    <item>
      <title>Exception in thread &#34;main&#34; java.lang.OutOfMemoryError: Java heap space</title>
      <link>https://sy123.ml/2020/05/14/exception-in-thread-main-java.lang.outofmemoryerror-java-heap-space/</link>
      <pubDate>Thu, 14 May 2020 05:31:01 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/05/14/exception-in-thread-main-java.lang.outofmemoryerror-java-heap-space/</guid>
      <description>今天用一个游戏资源批量解密程序出现错误提示：
1  Exception in thread &amp;#34;main&amp;#34; java.lang.OutOfMemoryError: Java heap space: failed reallocation of scalar replaced objects   工具太多，直接设置一下环境变量就完事儿
1 2  /mnt/win10/Users/zhili/Downloads 15s ❯ export _JAVA_OPTIONS=&amp;#34;-Xms512m -Xmx10G&amp;#34;   </description>
    </item>
    
    <item>
      <title>解决Windows与Ubuntu双系统时间同步问题</title>
      <link>https://sy123.ml/2020/05/12/%E8%A7%A3%E5%86%B3windows%E4%B8%8Eubuntu%E5%8F%8C%E7%B3%BB%E7%BB%9F%E6%97%B6%E9%97%B4%E5%90%8C%E6%AD%A5%E9%97%AE%E9%A2%98/</link>
      <pubDate>Tue, 12 May 2020 14:31:58 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/05/12/%E8%A7%A3%E5%86%B3windows%E4%B8%8Eubuntu%E5%8F%8C%E7%B3%BB%E7%BB%9F%E6%97%B6%E9%97%B4%E5%90%8C%E6%AD%A5%E9%97%AE%E9%A2%98/</guid>
      <description>UTC in Windows To dual boot with Windows it is recommended to configure Windows to use UTC, rather than Linux to use localtime. (Windows by default uses localtime [1].)
It can be done by a simple registry fix: Open regedit and add a DWORD value for 32-bit Windows, or QWORD for 64-bit one, with hexadecimal value 1 to the registry:
1  HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\TimeZoneInformation\RealTimeIsUniversal   You can do this from an Administrator Command Prompt running:</description>
    </item>
    
    <item>
      <title>删除kvm虚拟机出现cannot undefine domain with nvram</title>
      <link>https://sy123.ml/2020/05/12/%E5%88%A0%E9%99%A4kvm%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%87%BA%E7%8E%B0cannot-undefine-domain-with-nvram/</link>
      <pubDate>Tue, 12 May 2020 11:39:36 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/05/12/%E5%88%A0%E9%99%A4kvm%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%87%BA%E7%8E%B0cannot-undefine-domain-with-nvram/</guid>
      <description>KVM 报错以及处理 删除kvm虚拟机出现cannot undefine domain with nvram 删除Kvm虚拟时，需要先destroy，然后在undefine某台虚拟机，但是在删除其中一台虚拟机时出现以下错误：
1 2 3  me@ubuntu:~/virtual_machine$ virsh undefine ubuntu_2 error: Failed to undefine domain ubuntu_2 error: Requested operation is not valid: cannot undefine domain with nvram   这个时候可以使用**&amp;ndash;nvram**选项删除， 搜遍全网，并没有找到解决办法，这个最好使。
1 2  me@ubuntu:~/virtual_machine$ virsh undefine ubuntu_2 --nvram Domain ubuntu_2 has been undefined   KVM挂载硬盘容量显示不正确 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25  #创建了一个disk文件， 用于给7号VM添加100G的新硬盘 sudo qemu-img create -f qcow2 ubuntu_vm7_disk_100G 100G #挂载这个文件到sdb，sdb需要是虚机上未使用的名字 virsh attach-disk ubuntu_7 /var/lib/libvirt/images/ubuntu_vm7_disk_100G vdb --cache none #提示挂载成功，但是进入虚机查看硬盘设备，看到设备，但是容量明显不对，194k只是文件的大小，虚机里面应该看到100G才对 me@ubuntu7:~$ lsblk NAME MAJ:MIN RM SIZE RO TYPE MOUNTPOINT sr0 11:0 1 1024M 0 rom vda 252:0 0 50G 0 disk ├─vda1 252:1 0 512M 0 part /boot/efi └─vda2 252:2 0 49.</description>
    </item>
    
    <item>
      <title>Warning Secondary Partition Overlaps the Last Partition by X Blocks in Gdisk</title>
      <link>https://sy123.ml/2020/05/10/warning-secondary-partition-overlaps-the-last-partition-by-x-blocks-in-gdisk/</link>
      <pubDate>Sun, 10 May 2020 17:15:52 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/05/10/warning-secondary-partition-overlaps-the-last-partition-by-x-blocks-in-gdisk/</guid>
      <description>From what I just found out, it may be unsafe. I was getting this same error
 *************************************************************** Found invalid GPT and valid MBR; converting MBR to GPT format in memory. THIS OPERATION IS POTENTIALLY DESTRUCTIVE! Exit by typing &amp;lsquo;q&amp;rsquo; if you don&amp;rsquo;t want to convert your MBR partitions to GPT format!
 Warning! Secondary partition table overlaps the last partition by 33 blocks! You will need to delete this partition or resize it in another utility.</description>
    </item>
    
    <item>
      <title>Failed unmounting /run/user/1000 whenever i shutdown or reboot</title>
      <link>https://sy123.ml/2020/05/10/failed-unmounting-/run/user/1000-whenever-i-shutdown-or-reboot/</link>
      <pubDate>Sun, 10 May 2020 16:05:28 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/05/10/failed-unmounting-/run/user/1000-whenever-i-shutdown-or-reboot/</guid>
      <description>今天虚拟机关机发现出现了Failed unmounting /run/user/1000的红字提示，加上登录注销卡顿等异常，一看就不太正常，cat /etc/fstab 后发现是安装的时候挂载efi分区写错格式导致的，修正一下fstab的挂载信息重启就正常了～</description>
    </item>
    
    <item>
      <title>Kodbox Always Https</title>
      <link>https://sy123.ml/2020/05/10/kodbox-always-https/</link>
      <pubDate>Sun, 10 May 2020 13:27:00 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/05/10/kodbox-always-https/</guid>
      <description>很久不用kodexplorer，一堆BUG不修在搞to B商务弄出个kodbox，很久没用PHP出问题我也懒得研究，直接暴力解决问题就完事，以后再找替代品
1 2 3 4 5 6 7 8 9 10  --- web.function.php 2020-05-10 13:20:20.472730147 +0800 +++ web.function.new.php 2020-05-10 13:20:09.862832878 +0800 @@ -59,6 +59,7 @@  } function http_type(){ + return &amp;#39;https&amp;#39;;  if( (isset($_SERVER[&amp;#39;HTTPS&amp;#39;]) &amp;amp;&amp;amp; $_SERVER[&amp;#39;HTTPS&amp;#39;] !== &amp;#39;off&amp;#39;) || (isset($_SERVER[&amp;#39;HTTP_X_FORWARDED_PROTO&amp;#39;]) &amp;amp;&amp;amp; $_SERVER[&amp;#39;HTTP_X_FORWARDED_PROTO&amp;#39;] == &amp;#39;https&amp;#39;) || $_SERVER[&amp;#39;SERVER_PORT&amp;#39;] === 443   用了一分钟后我发现还是kodexplorer好使，最后一个版本好像是4.40，且用且珍惜</description>
    </item>
    
    <item>
      <title>NVRAM storage in libvirt</title>
      <link>https://sy123.ml/2020/05/09/nvram-storage-in-libvirt/</link>
      <pubDate>Sat, 09 May 2020 18:34:24 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/05/09/nvram-storage-in-libvirt/</guid>
      <description>NVRAM storage in libvirt Libvirt stores pflash/nvram files for privliged users in /var/lib/libvirt/qemu/nvram/ this is a copy of the template var file that is read only. OVMF uses these files to store information such as boot information. The template inforamtion was uesed to be configured in /etc/libvirt/qemu.conf but was moved to json files. [https://bugs.archlinux.org/task/64175]
 Location of master nvram file This configuration option is obsolete. Libvirt will follow the QEMU firmware metadata specification to automatically locate firmware images.</description>
    </item>
    
    <item>
      <title>Xf86OpenConsole Cannot Open Virtual Console</title>
      <link>https://sy123.ml/2020/05/06/xf86openconsole-cannot-open-virtual-console/</link>
      <pubDate>Wed, 06 May 2020 18:00:36 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/05/06/xf86openconsole-cannot-open-virtual-console/</guid>
      <description>I can start X only by root. If I am using startx using ordinary user I get the error:
xf86OpenConsole: Cannot open virtual console 1 (Permission denied)
1 2 3 4 5  $ groups lp wheel games video audio optical storage scanner power users $ ls -l /dev/tty1 crw-------- 1 root tty 4, 1 Jan 17 10:21 /dev/tty1   This might help someone. So I am going to post it.</description>
    </item>
    
    <item>
      <title>安装Win10提示我们无法创建新的分区，也找不到现在的分区</title>
      <link>https://sy123.ml/2020/05/05/%E5%AE%89%E8%A3%85win10%E6%8F%90%E7%A4%BA%E6%88%91%E4%BB%AC%E6%97%A0%E6%B3%95%E5%88%9B%E5%BB%BA%E6%96%B0%E7%9A%84%E5%88%86%E5%8C%BA%E4%B9%9F%E6%89%BE%E4%B8%8D%E5%88%B0%E7%8E%B0%E5%9C%A8%E7%9A%84%E5%88%86%E5%8C%BA/</link>
      <pubDate>Tue, 05 May 2020 12:14:03 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/05/05/%E5%AE%89%E8%A3%85win10%E6%8F%90%E7%A4%BA%E6%88%91%E4%BB%AC%E6%97%A0%E6%B3%95%E5%88%9B%E5%BB%BA%E6%96%B0%E7%9A%84%E5%88%86%E5%8C%BA%E4%B9%9F%E6%89%BE%E4%B8%8D%E5%88%B0%E7%8E%B0%E5%9C%A8%E7%9A%84%E5%88%86%E5%8C%BA/</guid>
      <description>前言 系统搬来linux有两年了，今天突然发现还是需要win10用ida的，虚拟机很不方便
虚拟机解决方法 google一下在知乎想起原因:
 原因似乎在于windows会执着地把系统分区（大概类似于/boot）放到磁盘0（类似于/dev/sda？）上面。而这个时候磁盘0是U盘……于是傻X了……windows就是傻X解决方法，拔U盘/硬盘，从而使想装系统的盘成为磁盘0……或者直接把想装系统的盘做成安装盘，这样它也是磁盘0了&amp;gt;_&amp;laquo;https://link.zhihu.com/?target=http%3A//jingyan.baidu.com/article/2c8c281df6f2d60009252a7c.html&amp;gt;
作者：杨微粒 链接：https://www.zhihu.com/question/21117479/answer/86745809 来源：知乎 著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。
 所以解决方案就是我们来帮助系统找到它需要安装的分区，我的虚拟机之前忘记干啥也是双系统出这问题，附加win10磁盘就完事
硬解决 将多余的硬盘拆下来，只留安装的硬盘，（这里不区分机械和固态），就是只留一个硬盘安装系统即可！
（动手能力弱的朋友请看下面！）
软解决 在linux下直接复制安装镜像里的 boot sources bootmgr bootmgr.efi
uefi还需要复制 EFI 文件夹到efi文件夹到efi分区，
重启安装即可
安装过程提示help setup cannot continue due to a corrupted 1 2 3 4 5 6 7 8  # 直接擦写一下这块硬盘 dd if=/dev/zero of=/dev/vdb # fdisk 重新分区 fdisk /dev/vdb # 格式化 mkfs.ntfs /dev/vdb1   </description>
    </item>
    
    <item>
      <title>Thunar sftp.desktop</title>
      <link>https://sy123.ml/2020/04/25/thunar-sftp.desktop/</link>
      <pubDate>Sat, 25 Apr 2020 01:15:51 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/04/25/thunar-sftp.desktop/</guid>
      <description>1 2 3 4 5 6  [Desktop Entry] Type=Application Version=1.0 Encoding=UTF-8 Exec=cp %F /mnt/data/src/yyy/GameServer Name=Copy To Data Store   1  ffmpeg -video_size 1920x1080 -framerate 30 -f x11grab -i :0.0+0,0 -f alsa -i hw:1,1,0 -f alsa -i hw:1,1,1 -filter_complex amerge output.mkv   </description>
    </item>
    
    <item>
      <title>Problems With Hardware Acceleration Environment Variables</title>
      <link>https://sy123.ml/2020/04/23/problems-with-hardware-acceleration-environment-variables/</link>
      <pubDate>Thu, 23 Apr 2020 00:02:33 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/04/23/problems-with-hardware-acceleration-environment-variables/</guid>
      <description>问题 1 2 3 4  ~ ❯ vainfo libva error: /usr/lib/dri/iHD_drv_video.so init failed vaInitialize failed with error code 1 (operation failed),exit   解决方法 Everything works as it is supposed to by just adding:
1 2 3 4  LIBVA_DRIVER_NAME=i965 # or if using the intel-media-driver which I prefer for newer hardware then it is: LIBVA_DRIVER_NAME=iHD   also for intel-media-driver you may want to read the readme and enable guc and huc.</description>
    </item>
    
    <item>
      <title>How can I simulate interactive console in VSCode debugger</title>
      <link>https://sy123.ml/2020/04/18/how-can-i-simulate-interactive-console-in-vscode-debugger/</link>
      <pubDate>Sat, 18 Apr 2020 00:06:48 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/04/18/how-can-i-simulate-interactive-console-in-vscode-debugger/</guid>
      <description>the VS Code debugger console doesn&amp;rsquo;t currently support piping any input through to stdin.
FYI, you can tell the Code debugger to use an external console in the launch config:
&amp;quot;externalConsole&amp;quot;: true It has a possible workaround, using remote debug + vscode task, but that is not trivial.
 It has a possible workaround, using remote debug + vscode task, but that is not trivial.
launch.json
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  { // Use IntelliSense to learn about possible attributes.</description>
    </item>
    
    <item>
      <title>解决&#39;ERROR: The certificate of `github.com’ is not trusted.&#39;问题</title>
      <link>https://sy123.ml/2020/04/15/%E8%A7%A3%E5%86%B3error-the-certificate-of-github.com-is-not-trusted.%E9%97%AE%E9%A2%98/</link>
      <pubDate>Wed, 15 Apr 2020 07:11:46 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/04/15/%E8%A7%A3%E5%86%B3error-the-certificate-of-github.com-is-not-trusted.%E9%97%AE%E9%A2%98/</guid>
      <description>今天早上有在GITHUB下载一个脚本到VPS中的时候有出现&amp;rdquo;ERROR: The certificate of `github.com’ is not trusted.&amp;ldquo;的错误提示。应该意思是这个证书可能不被信任，反正就这个提示，正式存在的，我换了其他有HTTPS网址也无法wget下载，应该是这个问题。
解决办法 1 2 3 4 5 6  wget --no-check-certificate github.com # 或者我们可以： apt-get install ca-certificates -y #Debian/Ubuntu yum install ca-certificates -y #CentOS   安装完毕之后应该是可以不用 no-check-certificate 参数。</description>
    </item>
    
    <item>
      <title>Linux 图片转pdf</title>
      <link>https://sy123.ml/2020/04/13/linux-%E5%9B%BE%E7%89%87%E8%BD%ACpdf/</link>
      <pubDate>Mon, 13 Apr 2020 02:39:04 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/04/13/linux-%E5%9B%BE%E7%89%87%E8%BD%ACpdf/</guid>
      <description>ImageMagick Just use this:
1  convert &amp;#34;*.{png,jpeg}&amp;#34; -quality 100 outfile.pdf   In general case you can combine more files into one pdf file with including them inside {} and separate them with a single comma.
adding -quality VALUE to keep quality after conversion(thanks to @iamcreasy)
1  convert &amp;#34;*.{ext1,ext2,ext3,...}&amp;#34; -quality 100 outfile.pdf   GhostScript gs
1 2 3 4 5 6 7 8 9 10 11 12  #!</description>
    </item>
    
    <item>
      <title>Feh Open SVG</title>
      <link>https://sy123.ml/2020/04/01/feh-open-svg/</link>
      <pubDate>Wed, 01 Apr 2020 21:58:23 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/04/01/feh-open-svg/</guid>
      <description>Without the &amp;ndash;conversion-timeout part, I run into this error: feh: No Imlib2 loader for that file format
As suggested in the Arch Linux Wiki, I open SVG images like this:
1  feh --conversion-timeout 1 file.svg   This will create a &amp;ldquo;feh&amp;rdquo; theme, which will be loaded by default and which will automatically apply the conversion-timeout option.
1  echo &amp;#34;feh --conversion-timeout 5&amp;#34; &amp;gt; ~/.config/feh/themes   </description>
    </item>
    
    <item>
      <title>What Does Networkmanager Wait Online Service Do</title>
      <link>https://sy123.ml/2020/04/01/what-does-networkmanager-wait-online-service-do/</link>
      <pubDate>Wed, 01 Apr 2020 20:29:10 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/04/01/what-does-networkmanager-wait-online-service-do/</guid>
      <description>Some code runs off the network In some multi-user environments part of the boot-up process can come from the network. For this case systemd defaults to waiting for the network to come on-line before certain steps are taken.
It appears that this service simply waits, doing absolutely nothing, until the network is connected, and when this happens, it changes its state so that other services that depend on the network can be launched to start doing their thing.</description>
    </item>
    
    <item>
      <title>word-wrap和word-break的区别</title>
      <link>https://sy123.ml/2020/04/01/word-wrap%E5%92%8Cword-break%E7%9A%84%E5%8C%BA%E5%88%AB/</link>
      <pubDate>Wed, 01 Apr 2020 00:02:15 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/04/01/word-wrap%E5%92%8Cword-break%E7%9A%84%E5%8C%BA%E5%88%AB/</guid>
      <description>这两个东西是什么，我相信至今还有很多人搞不清，只会死记硬背的写一个word-wrap:break-word;word-break:break-all;这样的东西来强制断句，又或者是因为这两个东西实在是太拗口了，长得又差不多，导致连背都很难背下来。
那它们到底是什么呢？我在mozilla的官网上找到如下的解释：
word-wrap
word-wrap
word-break
word-break
我们看到两个解释中都出现了 break lines within words 这样的词汇，说明它们都跟单词内断句又关。然后我们试着翻译一下上面的两段英文：
word-wrap:
css的 word-wrap 属性用来标明是否允许浏览器在单词内进行断句，这是为了防止当一个字符串太长而找不到它的自然断句点时产生溢出现象。
word-break:
css的 word-break 属性用来标明怎么样进行单词内的断句。
貌似从上面两个读着都蛋疼的翻译中找到了一些区别：word-wrap 强调的是是否允许单词内断句，而word-break强调的则是怎么样来进行单词内的断句。
说到这里，好像依然不是很明朗，好吧，表达能力差的孩纸真是伤不起啊，只能用些实例来补救了。
首先，何谓单词内断句？当然这里指的都是西文单词。
01
这是没有单词内断句的情况，我们看到那个单词是在是太长了，所以它溢出了包裹它的容器。
01
这是进行了单词内断句的情况，就是一个单词被断作了两行。
先要明确一点，不加word-wrap或word-break的时候，就是浏览器默认的时候，如果有一个单词很长，导致一行中剩下的空间已经放不下它时，则浏览器会把这个单词挪到下一行去：
01
word..d 这个我们创造出来的单词本来应该紧接在 long 后面的，但是long后剩下的空间已经不够了，而单词默认是不能断开的，所以浏览器就只好把它屈尊下移了。
这个长单词还不算变态的，因为至少它没有长到超过包裹它的元素的长度，但是如果超过了呢？
01
如果超过了就像前面我们提到过的，它会溢出它的父容器外，因为这时它是不允许被截断的，那就只能冲出去咯。
这个时候word-wrap就能派上用场了。我们给这段文字加上word-wrap:break-word看看会怎么样
01
01
哈哈，你给我滚回去吧，变态的长单词，即使你断了也无所谓。
这样，为了防止长单词溢出，就在它的内部断句了。这就是 word-wrap:break-word 的功能。
在看看word-wrap的浏览器支持情况：
01
很好，几乎所有浏览器都支持。
好吧，你现在可以说了，都有了word-wrap这个东西，那还要 word-break 来干什么鸟？
万恶的资本家总是想要榨干劳动者的一切，你看，下图中的long后面不是还有一段空间吗，难道就这样放着？太浪费了。。。
01
是啊，long后面那里足可以放好几个短的单词了，都是那个臭变态的长单词！
所以IE真的很体贴，不要再骂它啦，考虑到不浪费一点点空间的问题，它创造出了 word-break 这个东西。现在我们来看看使用 word-break:break-all; 后会怎么样。
01
01
看看发生什么了？那个变态的长单词并没有被挪到下一行，而是直接放在了long后面，然后在父容器的右边界断开了。所以，它没有浪费空间了哦。
再看下word-break:break-all的浏览器支持情况：
01
除了opera外，其他都支持耶（火狐也从不支持改为支持了）!
最开始我们说了，word-wrap 是用来决定允不允许单词内断句的，如果不允许的话长单词就会溢出。最重要的一点是它还是会首先尝试挪到下一行，看看下一行的宽度够不够，不够的话就进行单词内的断句。
而word-break:break-all则更变态，因为它断句的方式非常粗暴，它不会尝试把长单词挪到下一行，而是直接进行单词内的断句。这也可以解释为什么说它的作用是决定用什么方式来断句的，那就是——用了word-break:break-all，就等于使用粗暴方式来断句了。总之一句话，如果您想更节省空间，那就用word-break:break-all就对了！
但无论如何，单词内的断句都会对西文的可读性产生一定的影响，有时候这点就要注意了。
 ps:网上有些文章说，word-wrap:break-word 对长串英文不起作用，其实这是非常错误的，word-wrap:break-word照样能把一个长串英文或数字拆成多行。事实上，word-wrap:break-word与word-break:break-all共同点是都能把长单词强行断句，不同点是word-wrap:break-word会首先起一个新行来放置长单词，新的行还是放不下这个长单词则会对长单词进行强制断句；而word-break:break-all则不会把长单词放在一个新行里，当这一行放不下的时候就直接强制断句了。</description>
    </item>
    
    <item>
      <title>Boot Download Background Image</title>
      <link>https://sy123.ml/2020/03/28/boot-download-background-image/</link>
      <pubDate>Sat, 28 Mar 2020 20:54:33 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/03/28/boot-download-background-image/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Linux Force DHCP Client to Renew IP</title>
      <link>https://sy123.ml/2020/03/24/linux-force-dhcp-client-to-renew-ip/</link>
      <pubDate>Tue, 24 Mar 2020 07:43:59 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/03/24/linux-force-dhcp-client-to-renew-ip/</guid>
      <description>am using Ubuntu Linux. How to force Linux to reacquire a new IP address from the DHCP server? What is the command of Linux equivalent to Windows’s “ipconfig /renew” command?
 You need to use Dynamic Host Configuration Protocol Client i.e., dhclient command. The client normally doesn’t release the current lease as it is not required by the DHCP protocol. Some cable ISPs require their clients to notify the server if they wish to release an assigned IP address.</description>
    </item>
    
    <item>
      <title>Pandavan Off LED Indicator</title>
      <link>https://sy123.ml/2020/03/23/pandavan-off-led-indicator/</link>
      <pubDate>Mon, 23 Mar 2020 20:14:04 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/03/23/pandavan-off-led-indicator/</guid>
      <description>在自定义设置 - 按钮/LED 红灯无法关闭 有的固件有BUG只能在路由器启动后执行以下命令
1  mtk_gpio -w 13 0 #关红灯   </description>
    </item>
    
    <item>
      <title>Linux中拷贝目录跳过指定文件的方法</title>
      <link>https://sy123.ml/2020/03/20/linux%E4%B8%AD%E6%8B%B7%E8%B4%9D%E7%9B%AE%E5%BD%95%E8%B7%B3%E8%BF%87%E6%8C%87%E5%AE%9A%E6%96%87%E4%BB%B6%E7%9A%84%E6%96%B9%E6%B3%95/</link>
      <pubDate>Fri, 20 Mar 2020 13:57:01 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/03/20/linux%E4%B8%AD%E6%8B%B7%E8%B4%9D%E7%9B%AE%E5%BD%95%E8%B7%B3%E8%BF%87%E6%8C%87%E5%AE%9A%E6%96%87%E4%BB%B6%E7%9A%84%E6%96%B9%E6%B3%95/</guid>
      <description>近日在 Linux 环境中做版本迁移的时候遇到一个问题：需要将一个目录遍历拷贝到另一个目录中，但需要忽略其中的某些文件，由于目录中东西比较多，忽略的项也不好一一指定。普通的 cp 命令并没有排除某个文件或文件夹的参数，比较丑陋点可以 cp -r 拷贝完目录之后再去删除无用的，但如果做批量脚本操作就不爽了，经过实际试验之后暂时找到两个比较好的方法。
使用 rsync 进行拷贝 rsync 本来是文件同步备份的工具，相对于普通的 cp 命令，rsync 在控制方面就强多了，而且 rsync 对遍历目录也支持，有 &amp;ndash;exclude 参数可以忽略指定的文件或文件夹。
1 2  rsync -vaP --exclude=&amp;#34;.*&amp;#34; --exclude=&amp;#34;Makefile&amp;#34; dir1 /home/dir2   如上面演示的就可以排除掉隐藏文件和 Makefile 文件，-a 参数已经包含遍历处理参数 -r。
使用 find 加 cpio 进行拷贝 备注：此方法来自 Advanced Bash-Scripting Guide，需要了解的童鞋自己去参考了。
用过 find 的童鞋都知道，find 对文件的过滤那是非常强大的，配合 cpio 来进行目录的遍历拷贝就可以实现过滤指定的文件或文件夹，当然也可以做到只备份特定的文件或文件夹，你可以用 find 的各种过滤参数达到拷贝哪天的文件，拷贝近期更改的文件等特殊效果，而且 find 支持正则表达式，这种方式想比第一种使用 rsync 跳过文件的方式更加灵活，因此非常推荐使用此方式进行目录拷贝。
1 2  cd dir1 find . -regextype posix-egrep -mindepth 1 ! -regex &amp;#39;.</description>
    </item>
    
    <item>
      <title>archlinux升级内核后，系统挂了，修复方法</title>
      <link>https://sy123.ml/2020/03/18/archlinux%E5%8D%87%E7%BA%A7%E5%86%85%E6%A0%B8%E5%90%8E%E7%B3%BB%E7%BB%9F%E6%8C%82%E4%BA%86%E4%BF%AE%E5%A4%8D%E6%96%B9%E6%B3%95/</link>
      <pubDate>Wed, 18 Mar 2020 06:32:53 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/03/18/archlinux%E5%8D%87%E7%BA%A7%E5%86%85%E6%A0%B8%E5%90%8E%E7%B3%BB%E7%BB%9F%E6%8C%82%E4%BA%86%E4%BF%AE%E5%A4%8D%E6%96%B9%E6%B3%95/</guid>
      <description>今天滚完系统就没网络，startx报内核模块错误，当场裂开了，开机显示加载驱动失败，先来看看加载日志吧
1  sudo systemctl status systemd-modules-load   报错全是类似Module Vboxdrv Not Found in Directory xx这种
再查看下内核模块相关目录发现了端倪
1 2 3 4 5 6  ❯ uname -a Linux arch 5.5.8-arch1-1 ~/site/blog ❯ ls /lib/modules 5.5.9-arch1-2   原来是没加载新内核
解决方法 根据经验最好别排查原因，估计就是软件包BUG，懒得折腾再安装一次旧内核再滚就完事了
升级内核，系统挂了，可以通过降级内核的方法来修复系统
内核的安装包会缓存在/var/cache/pacman/pkg，文件名以 “linux-版本号”开头
使用命令pacman -Udd xxx.zst来安装
如果提示有文件存在的错误，删除掉提示的文件，再执行上面的命令，就可以了
 提示：要养成升级前先看wiki的习惯，如果仓库最新软件有bug，wiki会有公示
 </description>
    </item>
    
    <item>
      <title>Flash Download</title>
      <link>https://sy123.ml/2020/03/13/flash-download/</link>
      <pubDate>Fri, 13 Mar 2020 03:47:20 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/03/13/flash-download/</guid>
      <description>由于众所周知的原因，现在即使断网安装来自Flash Player安装问题 页面下载的离线安装包，也会在联网使用的时候提示“此Flash Player 与您的地区不兼容，请重新安装 Adobe Flash Player”。 为了防止有人既不想使用Adobe Download Manager, 又不想动自己的hosts(比如我)，本人把Flash 中国特供版的离线安装包下载地址给挖出来了，以尽可能地避免中国特供版ADM后期再加其他猛料。同时提供国际EXE安装版本和MSI安装版本。
国际版下载地址请使用代理访问，否则会被跳转回2144网页。
中国特供版 (30.0.0.113) Flash Player NPAPI https://www.flash.cn/flashplayer/3000113/install_flash_player_cn.exe
Flash Player PPAPI https://www.flash.cn/flashplayer/3000113/install_flash_player_ppapi_cn.exe
Flash Player ActiveX https://www.flash.cn/flashplayer/3000113/install_flash_player_ax_cn.exe
国际版 (exe 格式, 30.0.0.113) Flash Player NPAPI https://fpdownload.macromedia.com/pub/flashplayer/latest/help/install_flash_player.exe
Flash Player PPAPI https://fpdownload.macromedia.com/pub/flashplayer/latest/help/install_flash_player_ppapi.exe
Flash Player ActiveX https://fpdownload.macromedia.com/pub/flashplayer/latest/help/install_flash_player_ax.exe
Flash Player 独立播放器 (Standalone Projector) https://fpdownload.macromedia.com/pub/flashplayer/updaters/30/flashplayer_30_sa.exe
国际版 (Windows Installer 格式, 30.0.0.113) Flash Player NPAPI https://fpdownload.adobe.com/get/flashplayer/distyfp/current/win/install_flash_player_30_plugin.msi
Flash Player PPAPI https://fpdownload.adobe.com/get/flashplayer/distyfp/current/win/install_flash_player_30_ppapi.msi
Flash Player ActiveX https://fpdownload.adobe.com/get/flashplayer/distyfp/current/win/install_flash_player_30_active_x.msi
国际版 (exe 格式, 32.</description>
    </item>
    
    <item>
      <title>百度网盘扩容到100t以上</title>
      <link>https://sy123.ml/2020/03/13/%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E6%89%A9%E5%AE%B9%E5%88%B0100t%E4%BB%A5%E4%B8%8A/</link>
      <pubDate>Fri, 13 Mar 2020 03:04:22 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/03/13/%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E6%89%A9%E5%AE%B9%E5%88%B0100t%E4%BB%A5%E4%B8%8A/</guid>
      <description> 百度网盘无限“扩容”方法这里说的扩容是非正常途径，存在一定的风险！
 操作步骤  新建一个文件夹111111 移动或转存一些文件到该文件夹111111 （假设这个文件夹占用容量是A） 删除该文件夹111111 （网盘占用容量减少A） 再新建一个同名空文件夹111111，不放入文件，直接删除。（占用容量无变化） 到回收站还原第一次删除的文件夹111111[里面有一些文件] 正常结果：还原该文件夹后，网盘使用容量应该增加A 不正常结果：网盘容量并没有增加A，也就是说，还原后的文件夹111111占用的容量A成了漏网之鱼，重复操作即可扩容 若没有复现这个bug，重新操作以上步骤 不过需要更换文件名，比如：222222，3333，234fwef，808080  使用说明 一个标准容量是5T的SVIP个人账号，要扩容100T，我们就提前在账号内存入100T的占位文件，此时系统显示使用空间为0，可用空间为5T。
 1)用户转入4T资源后，系统显示使用空间为4T，可用空间为1T。 2)用户删除4T以上的占位文件，系统又显示使用空间为0T，可用空间为5T。 3)循环1~2的操作，直到消耗完占位文件。  补充说明 如果数据被同步，网盘占用容量正常了，就需要修复操作
扩容的步骤  新建一个文件夹123456【标记：A】， 删除之后，还原存入N个占位文件。 再删除。 新建一个同名文件夹123456 【标记：B】 删除后，到回收站还原文件夹123456【标记：A】。  若提示：容量不足提示还原失败，或者还原成功后，占用容量增加了。说明“扩容”失败了! 继续上面的操作步骤，换一个文件夹名比如23456789 继续操作直至成功。有时候需要多次尝试才可以成功！“扩容”成功后：
 注意1. 不要删除或重命名这个文件夹【标记：A】 里面最多不存放入超过500个数量的（占位）文件，否则删除后就无法还原。 如果“占用容量被后台同步” 就需要不断的删除和还原文件夹【标记：A】来修复占用容量【这里要注意一下：网盘占用容量会出现“卡住”的情况，等半个小时左右就正常显示了】 注意2. 必须保留回收站的同名文件夹【标记：B】，不能清空回收站。 注意3. 登录客户端或者上传、转存、下载后，第二天占用容量就会被同步，当然什么都不操作也会出现容量被同步的情况。按照1中操作 重新“扩容即可”，为了修复顺利，不要删除文件夹【标记：A】 和保留一些占位文件。 若占位文件和文件夹【标记：A】 都被删除了，也可以修复，重新操作步骤1-6。区别是不能从专辑转存占位文件了，就需要用网盘里的文件替代，还原成功后，就存入一些大容量的文件，数量不能超过500.做删除和还原。这样循环下去，理论可以做到无限多的内存。   很多人说不行，3月5日我自己试了下，用脚本去执行操作，很快扩出了100T的占位文件。  </description>
    </item>
    
    <item>
      <title>Google Chrome 离线安装包的官方下载</title>
      <link>https://sy123.ml/2020/03/13/google-chrome-%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85%E5%8C%85%E7%9A%84%E5%AE%98%E6%96%B9%E4%B8%8B%E8%BD%BD/</link>
      <pubDate>Fri, 13 Mar 2020 02:46:41 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/03/13/google-chrome-%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85%E5%8C%85%E7%9A%84%E5%AE%98%E6%96%B9%E4%B8%8B%E8%BD%BD/</guid>
      <description>在chrome首页的链接https://www.google.com/chrome后加上?system=true&amp;amp;standalone=1，一般默认下载稳定版，如果需要指定下载的版本就再加上&amp;amp;extra=[版本名称]（版本有stablechannel、betachannel、devchannel、canarychannel）。修改完链接后回车，就能下载离线包了。</description>
    </item>
    
    <item>
      <title>rename使用正则表达式</title>
      <link>https://sy123.ml/2020/03/12/rename%E4%BD%BF%E7%94%A8%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</link>
      <pubDate>Thu, 12 Mar 2020 22:50:06 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/03/12/rename%E4%BD%BF%E7%94%A8%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</guid>
      <description>前言 以前一直用类似rename &amp;quot;s/_/-/&amp;quot; *这样的命令正则替换一些文件名，不过系统切换到Archlinux后用rename一直失败，用man看了下说明才发现并不支持正则，只能这样用，并且不能全局替换
1  rename 123 456 *   其实几乎所有情况下, rename用不到正则表达式的. 你最多不过是通过正则确定要改名的文件列表而已. 这通过管道太容易了. 例如我在shell下, 会这样使用
1  f &amp;#39;bak$&amp;#39; |x rename &amp;#39;.bak&amp;#39; &amp;#39;&amp;#39;   在管道之前, 可以通过各种方式搭配, 来生成所需的文件列表
而rename也可以分多个步骤完成, man帮助中就有示例.
原因 最近有空查了很多资料才发现很多发行版默认的rename是util-linux里很弱的那个rename，比如Archlinux
解决方法 Archlinux可以装perl-rename这个包，命令就是perl-rename。Mac下可以用brew 安装rename。好久没用Ubuntu，记得以前Ubuntu 是prename 这个命令。
其实不只是s命令，所有有效的perl命令都能用，文件名会作为$_ 传入，命令执行完后的$_作为新文件名。比如全部改成小写：
1  rename &amp;#39;y/A-Z/a-z/&amp;#39; *   </description>
    </item>
    
    <item>
      <title>如何在vim保存时获得sudo权限</title>
      <link>https://sy123.ml/2020/03/12/%E5%A6%82%E4%BD%95%E5%9C%A8vim%E4%BF%9D%E5%AD%98%E6%97%B6%E8%8E%B7%E5%BE%97sudo%E6%9D%83%E9%99%90/</link>
      <pubDate>Thu, 12 Mar 2020 21:30:38 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/03/12/%E5%A6%82%E4%BD%95%E5%9C%A8vim%E4%BF%9D%E5%AD%98%E6%97%B6%E8%8E%B7%E5%BE%97sudo%E6%9D%83%E9%99%90/</guid>
      <description>1  :w !sudo tee %   命令:w !{cmd}，让vim执行一个外部命令{cmd}，然后把当前缓冲区的内容从stdin传入。 tee是一个把stdin保存到文件的小工具。 而%，是vim当中一个只读寄存器的名字，总保存着当前编辑文件的文件路径。 所以执行这个命令，就相当于从vim外部修改了当前编辑的文件，好完工。</description>
    </item>
    
    <item>
      <title>vim recording的使用方法</title>
      <link>https://sy123.ml/2020/03/12/vim-recording%E7%9A%84%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</link>
      <pubDate>Thu, 12 Mar 2020 17:05:52 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/03/12/vim-recording%E7%9A%84%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</guid>
      <description>使用vim时无意间触碰到q键，左下角出现“recording”这个标识，觉得好奇，遂在网上查了一下，然后这是vim的一个强大功能。他可以录 制一个宏（Macro)，在开始记录后，会记录你所有的键盘输入，包括在insert模式下的输入、正常模式下使用的各种命令等。
具体使用：
第一步：在正常模式下（非insert模式、非visual模式）按下q键盘
第二步：选择a-z或0-9中任意一个作为缓冲器的名字，准备开始录制宏
第三步：正常的操作，此次所有的操作都会被记录在上一步中定义的缓冲器中
第四步：在非insert模式下输入q停止宏的录制
第五步：使用@ + 第二步中定义的缓冲器的名字即可。
例如想把下面的文字
1 2 3 4 5 6 7 8  line1 line-2 line3-1 l4 line1 line-2 line3-1 l4   变成如下的文字
1 2 3 4 5 6 7 8 9 10  System.out.println(line1); System.out.println(line1); System.out.println(line-2); System.out.println(line3-1); System.out.println(L4); System.out.println(line1); System.out.println(line1); System.out.println(line-2); System.out.println(line3-1); System.out.println(L4);   观察可以发现他们的规律，在每行文字的开头添加“System.out.println(”，结尾添加“);”就变成下面的信息了。下面简单介绍一下如何使用recording来完成这样的操作。 首先把光标移动line1上，输入qt，准备开始录制，缓冲器的名字为t，录制的动作为：shift + ^ 回到行首、按下i键进入insert模式、输入“System.out.println(”、按下esc键回到正常模式、shift + $ 回到行尾部、按下i键进入insert模式、输入“);”按下esc键回到正常模式，按下q停止录制。然后把光标移动到下面一行的任意位置输入 @ + t 即可。
recording还可以和查询结合起来使用，例如想把一个文件中含有特定字符串的行注释，可以通过这样的宏来实现。在正常模式下输入/search string + enter、shift + ^、i、#、esc、shift + $。</description>
    </item>
    
    <item>
      <title>ts属性后面的感叹号有什么用处？</title>
      <link>https://sy123.ml/2020/03/10/ts%E5%B1%9E%E6%80%A7%E5%90%8E%E9%9D%A2%E7%9A%84%E6%84%9F%E5%8F%B9%E5%8F%B7%E6%9C%89%E4%BB%80%E4%B9%88%E7%94%A8%E5%A4%84/</link>
      <pubDate>Tue, 10 Mar 2020 14:51:20 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/03/10/ts%E5%B1%9E%E6%80%A7%E5%90%8E%E9%9D%A2%E7%9A%84%E6%84%9F%E5%8F%B9%E5%8F%B7%E6%9C%89%E4%BB%80%E4%B9%88%E7%94%A8%E5%A4%84/</guid>
      <description>首先看一段代码
1 2 3 4 5 6 7 8 9  import { Vue, Component, Prop } from &amp;#39;vue-property-decorator&amp;#39; @Component export default class YourComponent extends Vue { @Prop(Number) propA!: number @Prop({ default: &amp;#39;default value&amp;#39; }) propB!: string @Prop([String, Boolean]) propC: string | boolean }   这是vue组件的ts写法，仔细观察，里面有一段这样的代码@Prop(Number) propA!: number，这是什么鬼？
查了一下ts的文档说明，原来感叹号是非null和非undefined的类型断言，所以上面的写法就是对propA这个属性进行非空断言。文档的相关说明在这里。
官方文档上的一个例子很好的说明了这个问题
1 2 3 4 5 6 7 8 9 10 11 12 13 14  interface Entity { name: string } // Compiled with --strictNullChecks function validateEntity(e?</description>
    </item>
    
    <item>
      <title>git 出现错误Could not resolve host: github.com</title>
      <link>https://sy123.ml/2020/03/06/git-%E5%87%BA%E7%8E%B0%E9%94%99%E8%AF%AFcould-not-resolve-host-github.com/</link>
      <pubDate>Fri, 06 Mar 2020 21:36:57 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/03/06/git-%E5%87%BA%E7%8E%B0%E9%94%99%E8%AF%AFcould-not-resolve-host-github.com/</guid>
      <description>1 2 3  ❯ git clone https://github.com/Zhili/GameServer Cloning into &amp;#39;GameServer&amp;#39;... fatal: unable to access &amp;#39;https://github.com/Zhili/GameServer/&amp;#39;: Couldn&amp;#39;t resolve host name   (Just a little reminder) If you want the hostname also be resolved by the proxy (that means passing everything through the proxy), especially when you are cloning a gist, you can use the following setting (the key is that it uses socks5h instead of socks5):
1  git config --global http.</description>
    </item>
    
    <item>
      <title>Browser plugins</title>
      <link>https://sy123.ml/2020/03/04/browser-plugins/</link>
      <pubDate>Wed, 04 Mar 2020 17:06:34 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/03/04/browser-plugins/</guid>
      <description>Installation The package you will need to install depends on the browser you use.
 The NPAPI version can be installed with the flashplugin package. The PPAPI version can be installed with the pepper-flash package. Standalone version can be installed with the flashplayer-standaloneAUR package.  </description>
    </item>
    
    <item>
      <title>javascript中的各种简写总结（不断更新）</title>
      <link>https://sy123.ml/2020/02/28/javascript%E4%B8%AD%E7%9A%84%E5%90%84%E7%A7%8D%E7%AE%80%E5%86%99%E6%80%BB%E7%BB%93%E4%B8%8D%E6%96%AD%E6%9B%B4%E6%96%B0/</link>
      <pubDate>Fri, 28 Feb 2020 17:09:04 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/02/28/javascript%E4%B8%AD%E7%9A%84%E5%90%84%E7%A7%8D%E7%AE%80%E5%86%99%E6%80%BB%E7%BB%93%E4%B8%8D%E6%96%AD%E6%9B%B4%E6%96%B0/</guid>
      <description>在看书的时候，搜void 0时，看到有人列出过类似的例子，所以延伸着搜索了一堆简写的例子整理出来。
这里的简写，包括比如void 0代替undefined这类值替代，
也包括了箭头函数替代普通函数、for循环各种写法中性能最好的这类写法替代，
还想到了以前面试的时候看到的es6面试题，数组去重，最简单的方法是用set和Array.from。
类似的都会整理出来，以后遇到了新的也会更新上来。
2018/12/22
（1）取整，位运算更快。原因介绍：参考：位运算实现的原因
位运算取整（更快）
位运算取整：下述，都可以
1 2 3 4  ~~a; //双非位操作符 a|0; 。。。   （2）四舍五入（0.5规定向上取整），位运算更快
位运算的四舍五入，负数不适配
位运算适合正数的四舍五入，但是负数只能舍，不能入。
1 2 3 4  a+0.5|0; ~~(a+0.5); 。。。   （3）内置值 undefined
undefined替代
1 2 3  void 0; // 快 0[0]; // 略慢    （4）内置值 Infinity
Infinity替代
1/0; （5）布尔值短写法
布尔值短写法
!0; // true !1; //false （6）十进制指数（想当初，刚学c的时候，我一直都用pow(10,n)） 10000000000 === 1e10
（7）三元运算符 ? : 还用于简化函数的调用。</description>
    </item>
    
    <item>
      <title>Encrypt string using Openssl</title>
      <link>https://sy123.ml/2020/02/28/encrypt-string-using-openssl/</link>
      <pubDate>Fri, 28 Feb 2020 11:28:00 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/02/28/encrypt-string-using-openssl/</guid>
      <description>Try this:
1 2 3 4  echo &amp;#39;foo&amp;#39; | openssl aes-256-cbc -pbkdf2 -a -salt echo &amp;#39;U2FsdGVkX1/QGdl4syQE8bLFSr2HzoAlcG299U/T/Xk=&amp;#39; | openssl aes-256-cbc -pbkdf2 -a -d -salt   Run
1 2 3  openssl list-cipher-commands   to list all available ciphers.</description>
    </item>
    
    <item>
      <title>youtube视频下载</title>
      <link>https://sy123.ml/2020/02/27/youtube%E8%A7%86%E9%A2%91%E4%B8%8B%E8%BD%BD/</link>
      <pubDate>Thu, 27 Feb 2020 18:34:08 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/02/27/youtube%E8%A7%86%E9%A2%91%E4%B8%8B%E8%BD%BD/</guid>
      <description>https://y2mate.guru/en1/</description>
    </item>
    
    <item>
      <title>React关于form的取部分字段数据</title>
      <link>https://sy123.ml/2020/02/27/react%E5%85%B3%E4%BA%8Eform%E7%9A%84%E5%8F%96%E9%83%A8%E5%88%86%E5%AD%97%E6%AE%B5%E6%95%B0%E6%8D%AE/</link>
      <pubDate>Thu, 27 Feb 2020 14:19:24 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/02/27/react%E5%85%B3%E4%BA%8Eform%E7%9A%84%E5%8F%96%E9%83%A8%E5%88%86%E5%AD%97%E6%AE%B5%E6%95%B0%E6%8D%AE/</guid>
      <description>获取查询条件的值 validateFields form.validateFields / validateFieldsAndScroll 校验并获取一组输入域的值与 Error，若 fieldNames 参数为空，则校验全部组件
获取表单的所有数据 1 2 3 4 5 6 7 8 9  this.props.form.validateFieldsAndScroll((err, values) =&amp;gt; { if(err){ return; } console.log(&amp;#39;_values&amp;#39;, values); });   获取表单的部分字段数据 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27  this.props.form.validateFieldsAndScroll([`timeUnit${num}`, `Time${num}`,`deviceTypeId${num}`], (err, values) =&amp;gt; { if(err){ return; } console.</description>
    </item>
    
    <item>
      <title>Tippy_warning</title>
      <link>https://sy123.ml/2020/02/27/tippy_warning/</link>
      <pubDate>Thu, 27 Feb 2020 07:03:10 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/02/27/tippy_warning/</guid>
      <description>I have the folowing part of code:
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  private rootRef = React.createRef&amp;lt;HTMLDivElement&amp;gt;(); const target = ( &amp;lt;div&amp;gt; &amp;lt;Icon design=&amp;#39;accepted&amp;#39; size=&amp;#39;xl&amp;#39; /&amp;gt; &amp;lt;/div&amp;gt; ); return ( &amp;lt;React.Fragment&amp;gt; {React.cloneElement(target, { ref: this.rootRef, onMouseOver: this.handleMouseOver, onMouseLeave: this.handleMouseLeave, })} {open &amp;amp;&amp;amp; this.renderTooltip()} &amp;lt;/React.Fragment&amp;gt; );   When target with div element (or any other instead of div) everything is ok, but when target is:</description>
    </item>
    
    <item>
      <title>百度网盘超级会员账号分享</title>
      <link>https://sy123.ml/2020/02/27/%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E8%B6%85%E7%BA%A7%E4%BC%9A%E5%91%98%E8%B4%A6%E5%8F%B7%E5%88%86%E4%BA%AB/</link>
      <pubDate>Thu, 27 Feb 2020 02:07:36 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/02/27/%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E8%B6%85%E7%BA%A7%E4%BC%9A%E5%91%98%E8%B4%A6%E5%8F%B7%E5%88%86%E4%BA%AB/</guid>
      <description>百度云 请低调使用&amp;hellip;
 都是选微博登录  选微博登录 选微博登录 选微博登录!!!   验证码全部大写填写 确认用鼠标点 登录后如遇到重试页面, 点击几次重试即可. 请不要删除网盘里的文件!!! 请不要删除网盘里的文件!!! 请不要删除网盘里的文件!!!  并不保证当你看到时账号都是可以用的, 但是分享的时候肯定都是可以的. 如果有失效账号, 麻烦告知一下, 我会及时处理.
账号越来越难弄, 且用且珍惜.
    Account Expire UserName     账号：jiao36662855@163.com密码：2i1dyc 2020-03-23    账号：17109223297密码：hz834931 2020-03-23    账号：bizoulong982@163.com密码：3d55qbk7 （2.22当天有效）    账号：17898611960密码：aayu805 2020-03-23    账号：15096085029密码：yqpfem278 2020-03-23    账号：16534101337密码：mianfeivip.com3 2020-03-23    账号：18857395243密码：aaaa1111 2020-03-23    账号mpbncy09@touzi580.</description>
    </item>
    
    <item>
      <title>出现value.locale is not a function问题解决办法</title>
      <link>https://sy123.ml/2020/02/26/%E5%87%BA%E7%8E%B0value.locale-is-not-a-function%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</link>
      <pubDate>Wed, 26 Feb 2020 15:28:15 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/02/26/%E5%87%BA%E7%8E%B0value.locale-is-not-a-function%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</guid>
      <description>给datepicker赋值 可以输出赋值,datepicker赋值需要moment格式的数据,如果赋值了string类型的会报错 需要进行moment格式化moment(dateString)
给普通字符串赋值 如果赋值了moment类型的数据 可以通过moment(date).format(XXX)来解决,如果还不行的话可以使用date&amp;amp;&amp;amp; moment(date).lacale(‘en’).format(XXX)</description>
    </item>
    
    <item>
      <title>约定俗成的常见缩写</title>
      <link>https://sy123.ml/2020/02/25/%E7%BA%A6%E5%AE%9A%E4%BF%97%E6%88%90%E7%9A%84%E5%B8%B8%E8%A7%81%E7%BC%A9%E5%86%99/</link>
      <pubDate>Tue, 25 Feb 2020 12:39:44 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/02/25/%E7%BA%A6%E5%AE%9A%E4%BF%97%E6%88%90%E7%9A%84%E5%B8%B8%E8%A7%81%E7%BC%A9%E5%86%99/</guid>
      <description>   全称 缩写     event evt   connect conn   server srv   address addr   request req   response rep   lenght len   collection col   signal sig   error of last number erron   field field   property props   defines defs   object obj   system sys   message msg   number num   directory dir   dictionory dict   protocol proto   button btn   table tbl   label lbl   Image img   Sprite sp   texture tex   tween tw   transform trans   animation anim   material mat   vecter vec   position pos   delegate del   callback cb    2020/02/25 update    缩写 全称     acc accessibility   auto automatic   eval evaluate   impl implementation   info in   num number of   min minimum   max maximum   nav navigation   regexp regular expression   util utility   req request   resp response   res resource   app application   auth authorization/authentication 这点非常不认可，同一个常见缩写居然能代表两个不同的词。   dev develop   env environment   db database   pkg package   svr server   i18n internationalization   cert certificate   msg message   addr address   tmp/temp temporary   var/def variable/define 其实 var/def 已经是很多语言的关键字了   calc calculate/calculation   src source   dest destination   min/max minimum/maximum 应该已经不算了吧。。。   doc document   dir directory    </description>
    </item>
    
    <item>
      <title>Copying all files inside subdirectories and renaming instead of overwriting</title>
      <link>https://sy123.ml/2020/02/25/copying-all-files-inside-subdirectories-and-renaming-instead-of-overwriting/</link>
      <pubDate>Tue, 25 Feb 2020 04:36:20 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/02/25/copying-all-files-inside-subdirectories-and-renaming-instead-of-overwriting/</guid>
      <description>GNU cp(1) has a backup option:
1  cp --backup SOURCE [SOURCE...] [DESTINATION]   This has the following effects which can be controlled with other options as described in the manual page of cp(1):
1 2 3 4 5 6 7  --backup[=CONTROL] make a backup of each existing destination file -b like --backup but does not accept an argument -S, --suffix=SUFFIX override the usual backup suffix   The backup suffix is ~, unless set with --suffix or SIMPLE_BACKUP_SUFFIX.</description>
    </item>
    
    <item>
      <title>Android Studio preview</title>
      <link>https://sy123.ml/2020/02/24/android-studio-preview/</link>
      <pubDate>Mon, 24 Feb 2020 07:58:36 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/02/24/android-studio-preview/</guid>
      <description>更新 IDE 和 SDK 工具 安装 Android Studio 后，您可以轻松通过自动更新和 Android SDK 管理器让 Android Studio IDE 和 Android SDK 工具保持最新状态。
更新 IDE 和变更版本 若有可用的 IDE 更新，Android Studio 将通过小气泡对话框通知您，不过您也可以依次点击 Help &amp;gt; Check for Update（在 Mac 上，依次点击 Android Studio &amp;gt; Check for Updates）手动检查更新。
您可以通过以下发布版本获取 Android Studio 更新：
Canary 版：这些是前沿版本，大约每周更新一次，可在 developer.android.com/studio/preview 下载。 除了接收 Android Studio 的 Canary 版之外，您还将接收其他 SDK 工具的预览版，包括 Android 模拟器。
虽然这些版本存在较多的错误，但它们已经过测试，我们希望为您提供这些版本，以便您尝试新功能并提供反馈。此版本不推荐用于生产开发。
开发者版：这些是精心挑选的 Canary 版本，已经过全面的内部测试。 测试版：这些是基于稳定 Canary 版的候选版本，这类版本会先收集反馈，然后再作为稳定版进行发布。 稳定版：官方稳定版，可在 developer.android.com/studio 下载。 如果您想要在生产 Android 项目中仍然使用稳定版的同时试用预览版（Canary 版、开发者版或测试版），可以并排安装两个版本。</description>
    </item>
    
    <item>
      <title>Android Studio emulator ugly black borders</title>
      <link>https://sy123.ml/2020/02/24/android-studio-emulator-ugly-black-borders/</link>
      <pubDate>Mon, 24 Feb 2020 04:43:30 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/02/24/android-studio-emulator-ugly-black-borders/</guid>
      <description>Any way to remove the black box behind the emulator? Should run a compositor, something like compton Should try to use xprop WM_CLASS
For the border, likely a compositor is needed or you can start the AVD without a device frame.
For making it floating, add this to your config Floating all windows with &amp;ldquo;android emulator&amp;rdquo; header:
1  for_window [title=&amp;#34;.*Emulator.*&amp;#34;] floating enable   </description>
    </item>
    
    <item>
      <title>Vim_search_in_file</title>
      <link>https://sy123.ml/2020/02/24/vim_search_in_file/</link>
      <pubDate>Mon, 24 Feb 2020 01:15:09 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/02/24/vim_search_in_file/</guid>
      <description>总有人问我 Vim 中能不能查找，当然能！而且是超级强的查找！ 这篇文章来详细介绍 Vim 中查找相关的设置和使用方法。 包括查找与替换、查找光标所在词、高亮前景/背景色、切换高亮状态、大小写敏感查找等。
查找 在normal模式下按下/即可进入查找模式，输入要查找的字符串并按下回车。 Vim会跳转到第一个匹配。按下n查找下一个，按下N查找上一个。
Vim查找支持正则表达式，例如/vim$匹配行尾的&amp;quot;vim&amp;rdquo;。 需要查找特殊字符需要转义，例如/vim$匹配&amp;quot;vim$&amp;rdquo;。
注意查找回车应当用\n，而替换为回车应当用\r（相当于）。
大小写敏感查找 在查找模式中加入\c表示大小写不敏感查找，\C表示大小写敏感查找。例如：
/foo\c 将会查找所有的&amp;quot;foo&amp;rdquo;,&amp;ldquo;FOO&amp;rdquo;,&amp;ldquo;Foo&amp;quot;等字符串。
大小写敏感配置 Vim 默认采用大小写敏感的查找，为了方便我们常常将其配置为大小写不敏感：
&amp;quot; 设置默认进行大小写不敏感查找 set ignorecase &amp;quot; 如果有一个大写字母，则切换到大小写敏感查找 set smartcase 将上述设置粘贴到你的~/.vimrc，重新打开Vim即可生效。
查找当前单词 在normal模式下按下*即可查找光标所在单词（word）， 要求每次出现的前后为空白字符或标点符号。例如当前为foo， 可以匹配foo bar中的foo，但不可匹配foobar中的foo。 这在查找函数名、变量名时非常有用。
按下g*即可查找光标所在单词的字符序列，每次出现前后字符无要求。 即foo bar和foobar中的foo均可被匹配到。
其他设置 :set incsearch 可以在敲键的同时搜索，按下回车把移动光标移动到匹配的词； 按下 Esc 取消搜索。
:set wrapscan 用来设置到文件尾部后是否重新从文件头开始搜索。
查找与替换 :s（substitute）命令用来查找和替换字符串。语法如下：
:{作用范围}s/{目标}/{替换}/{替换标志} 例如:%s/foo/bar/g会在全局范围(%)查找foo并替换为bar，所有出现都会被替换（g）。
作用范围 作用范围分为当前行、全文、选区等等。
当前行：
:s/foo/bar/g 全文：
:%s/foo/bar/g 选区，在Visual模式下选择区域后输入:，Vim即可自动补全为 :&amp;lsquo;&amp;lt;,&amp;lsquo;&amp;gt;。
:&amp;lsquo;&amp;lt;,&amp;lsquo;&amp;gt;s/foo/bar/g 2-11行：
:5,12s/foo/bar/g 当前行.与接下来两行+2：
:.,+2s/foo/bar/g 替换标志 上文中命令结尾的g即是替换标志之一，表示全局global替换（即替换目标的所有出现）。 还有很多其他有用的替换标志：
空替换标志表示只替换从光标位置开始，目标的第一次出现：
:%s/foo/bar i表示大小写不敏感查找，I表示大小写敏感：</description>
    </item>
    
    <item>
      <title>百度云加速NS接入流程</title>
      <link>https://sy123.ml/2020/02/23/%E7%99%BE%E5%BA%A6%E4%BA%91%E5%8A%A0%E9%80%9Fns%E6%8E%A5%E5%85%A5%E6%B5%81%E7%A8%8B/</link>
      <pubDate>Sun, 23 Feb 2020 04:36:16 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/02/23/%E7%99%BE%E5%BA%A6%E4%BA%91%E5%8A%A0%E9%80%9Fns%E6%8E%A5%E5%85%A5%E6%B5%81%E7%A8%8B/</guid>
      <description>百度云加速NS接入是最简单的方式，不过还是很多站长管理员不大懂，今天教大家如何NS接入。
首先点域名继续接入 添加子域名，A记录、主机名: WWW，记录值写你的服务器的IP，如果你有其它子域名的也一并添加创建。 创建完子域名后，点一步，查看云加速DNS 复制加速DNS n3060.ns.yunjiasu.com、n333.ns.yunjiasu.com 进入域名注册商管理处，修改NS记录，比如阿里云 修改完成后，等生效即可。需要注意的是，域名修改DNS一般全国生效为24小时左右，所以需要耐心等待了。
好了以上就是百度云加速NS接入的全部教程了，希望可以帮到大家。</description>
    </item>
    
    <item>
      <title>linux中如何手动清零缓冲</title>
      <link>https://sy123.ml/2020/02/16/linux%E4%B8%AD%E5%A6%82%E4%BD%95%E6%89%8B%E5%8A%A8%E6%B8%85%E9%9B%B6%E7%BC%93%E5%86%B2/</link>
      <pubDate>Sun, 16 Feb 2020 15:20:03 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/02/16/linux%E4%B8%AD%E5%A6%82%E4%BD%95%E6%89%8B%E5%8A%A8%E6%B8%85%E9%9B%B6%E7%BC%93%E5%86%B2/</guid>
      <description>Emptying the buffers cache If you ever want to empty it you can use this chain of commands.
1 2 3 4 5 6 7 8 9 10  free &amp;amp;&amp;amp; sync &amp;amp;&amp;amp; echo 3 &amp;gt; /proc/sys/vm/drop_caches &amp;amp;&amp;amp; free total used free shared buffers cached Mem: 1018916 980832 38084 0 46924 355764 -/+ buffers/cache: 578144 440772 Swap: 2064376 128 2064248 total used free shared buffers cached Mem: 1018916 685008 333908 0 224 108252 -/+ buffers/cache: 576532 442384 Swap: 2064376 128 2064248   You can signal the Linux Kernel to drop various aspects of cached items by changing the numeric argument to the above command.</description>
    </item>
    
    <item>
      <title>如何清理Virtualbox虚拟机VDI镜像文件的空间大小</title>
      <link>https://sy123.ml/2020/02/16/%E5%A6%82%E4%BD%95%E6%B8%85%E7%90%86virtualbox%E8%99%9A%E6%8B%9F%E6%9C%BAvdi%E9%95%9C%E5%83%8F%E6%96%87%E4%BB%B6%E7%9A%84%E7%A9%BA%E9%97%B4%E5%A4%A7%E5%B0%8F/</link>
      <pubDate>Sun, 16 Feb 2020 15:10:33 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/02/16/%E5%A6%82%E4%BD%95%E6%B8%85%E7%90%86virtualbox%E8%99%9A%E6%8B%9F%E6%9C%BAvdi%E9%95%9C%E5%83%8F%E6%96%87%E4%BB%B6%E7%9A%84%E7%A9%BA%E9%97%B4%E5%A4%A7%E5%B0%8F/</guid>
      <description>玩虚拟机的同学都知道，对于那些设定为动态配分的虚拟机，一开始装完系统时可能只有几个G，但是随着你不断的使用，体积空间就会越来越大，随便就是几十个G了。也就是说动态扩展的VDI文件只会大，不会小。这期间，就算你去虚拟机里面删除一些文件，整个虚拟机的镜像文件VDI文件的大小依然不会变小，使其所占用的实际硬盘空间过大，给备份和分享都带来麻烦。因此，今天我们就来研究一下如何解决这个问题，其实很简单。
以下方法，在我自己的64位Ubuntu 14.04和64位win10虚拟机中亲测有效！
步骤1：碎片整理 第一步要做的是碎片整理，整理过程需要一个特定的工具，win系统和linux系统各自有别：
 1、linux系统下  打开虚拟机，执行下面的命令：
1 2  sudo dd if=/dev/zero of=/free bs=1M sudo rm -f /free   一般来说，大约5-10分钟清理完毕，取决于你的系统大小和磁盘空间混乱程度。于是关闭虚拟机，进入下一步。
 2、win系统下  需要下载一个特定的工具，点击此处进入官方下载，如果链接失效，也可以点击此处直接下载我整理好的版本。
下载后解压，取出其中的diskext.exe（针对32位系统）或者diskext64.exe（针对64位系统），将其复制到虚拟机的C盘根目录下，然后以管理员身份在虚拟机中启动命令行cmd，输入以下命令：
1  C:\sdelete64.exe -z c:	# c表示清理c盘   便会自动开始清理磁盘，大约5-10分钟左右方能清理完毕，于是便可关闭虚拟机，进入下一步。
步骤2：镜像压缩 关闭虚拟机，然后通过Virtualbox自带的神器vboxmanage modifyhd中的–compact命令来进行VDI镜像文件的压缩。具体步骤是：
打开cmd命令窗口，并进入Virtualbox所安装的目录（一般是C:\Program Files\Oracle\VirtualBox）目录，然后启动VBoxManage.exe进行VDI镜像文件的压缩，并等待命令结束即可：
1 2  cd &amp;#34;C:\Program Files\Oracle\VirtualBox&amp;#34; VBoxManage.exe modifyhd &amp;#34;E:\V_VtSystem\A_Systems\Ubuntu 14.04.vdi&amp;#34; --compact   实际测试我ubuntu系统由35G压缩成只有20G，win10系统由40G压缩成25G，效果还是非常明显的。</description>
    </item>
    
    <item>
      <title>使用systemd-analyze优化系统启动时间</title>
      <link>https://sy123.ml/2020/02/16/%E4%BD%BF%E7%94%A8systemd-analyze%E4%BC%98%E5%8C%96%E7%B3%BB%E7%BB%9F%E5%90%AF%E5%8A%A8%E6%97%B6%E9%97%B4/</link>
      <pubDate>Sun, 16 Feb 2020 14:53:24 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/02/16/%E4%BD%BF%E7%94%A8systemd-analyze%E4%BC%98%E5%8C%96%E7%B3%BB%E7%BB%9F%E5%90%AF%E5%8A%A8%E6%97%B6%E9%97%B4/</guid>
      <description>systemd-analyze简介 systemd-analyze是Linux自带的分析系统启动性能的工具。
systemd-analyze可使用的命令：
  systemd-analyze [OPTIONS…] [time]
  systemd-analyze [OPTIONS…] blame
  systemd-analyze [OPTIONS…] critical-chain [UNIT…]
  systemd-analyze [OPTIONS…] plot [&amp;gt; file.svg]
  systemd-analyze [OPTIONS…] dot [PATTERN…] [&amp;gt; file.dot]
  systemd-analyze [OPTIONS…] dump
  systemd-analyze [OPTIONS…] set-log-level LEVEL
  systemd-analyze [OPTIONS…] set-log-target TARGET
  systemd-analyze [OPTIONS…] get-log-level
  systemd-analyze [OPTIONS…] get-log-target
  systemd-analyze [OPTIONS…] syscall-filter [SET…]
  systemd-analyze [OPTIONS…] verify [FILES…]</description>
    </item>
    
    <item>
      <title>Saga deprecated 警告</title>
      <link>https://sy123.ml/2020/02/15/saga-deprecated-%E8%AD%A6%E5%91%8A/</link>
      <pubDate>Sat, 15 Feb 2020 22:23:37 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/02/15/saga-deprecated-%E8%AD%A6%E5%91%8A/</guid>
      <description>What happens? 1  [...effects] has been deprecated in favor of all([...effects]), please update your code   it does not effect dva.js, its redux saga api update, you just need to do this
1 2 3 4 5  effects: { * query(action, {call, put, all}) { yield all([]) } }   Redux saga apis:</description>
    </item>
    
    <item>
      <title>Visual Studio Code 偏好设置</title>
      <link>https://sy123.ml/2020/02/15/visual-studio-code-%E5%81%8F%E5%A5%BD%E8%AE%BE%E7%BD%AE/</link>
      <pubDate>Sat, 15 Feb 2020 17:58:47 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/02/15/visual-studio-code-%E5%81%8F%E5%A5%BD%E8%AE%BE%E7%BD%AE/</guid>
      <description>Visual Studio Code 提供了极大的弹性让我们自订想要的编辑器样式，端看使用者设定（User Setting）中，就超过 800 项设定可以让开发者自由调整，而且还有扩充套件能够增强 VS Code 的开发能力。
 这篇主要是我个人偏好的设定，完整 setting.json 请参考 gist。
 首先可以使用快速键 Ctrl +, 开启 settings.json 使用者设定档，或从选单列中点选档案 &amp;gt; 喜好设定 &amp;gt; 设定。
Global 常用设定 editor 1  editor.fontFamily // 设定字型偏好    唯一选择 Source Code Pro 连字符号字型可选择 FiraCode 或 Hasklig 择一使用(个人偏好 FiraCode) 设定值：&amp;quot;editor.fontFamily&amp;quot;: &amp;quot;&#39;Fira Code&#39;, &#39;Source Code Pro&#39;, Consolas, &#39;Microsoft JhengHei&#39;, &#39;Courier New&#39;, monospace&amp;quot;,  1 2 3 4 5 6 7 8 9  &amp;#34;editor.</description>
    </item>
    
    <item>
      <title>umi-ui bug using react-document-title</title>
      <link>https://sy123.ml/2020/02/10/umi-ui-bug-using-react-document-title/</link>
      <pubDate>Mon, 10 Feb 2020 15:41:37 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/02/10/umi-ui-bug-using-react-document-title/</guid>
      <description>背景 React 项目使用umi时发报：
 Uncaught Invariant Violation: React.Children.only expected to receive a single React element child. The above error occurred in the  component ui socket init CloseEvent {type: &amp;ldquo;close&amp;rdquo;, bubbles: false, cancelable: false, timeStamp: 1571127775342, wasClean: false, …}
 异常代码 1 2 3 4 5  &amp;lt;DocumentTitle title={this.renderPageTitle()}&amp;gt; &amp;lt;ContainerQuery query={query}&amp;gt; {(params: any) =&amp;gt; &amp;lt;div className={classNames(params)}&amp;gt;{layout}&amp;lt;/div&amp;gt;} &amp;lt;/ContainerQuery&amp;gt; &amp;lt;/DocumentTitle&amp;gt;   DocumentTitle组件内部最外层只能接受一个元素，而代码中有多个元素，所以报错。
解决方案 用&amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;或者&amp;lt;&amp;gt;&amp;lt;/&amp;gt;在外部包裹后就OK，不再报错，页面可正常显示。</description>
    </item>
    
    <item>
      <title>git clone 指定分支拉代码</title>
      <link>https://sy123.ml/2020/02/10/git-clone-%E6%8C%87%E5%AE%9A%E5%88%86%E6%94%AF%E6%8B%89%E4%BB%A3%E7%A0%81/</link>
      <pubDate>Mon, 10 Feb 2020 13:07:08 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/02/10/git-clone-%E6%8C%87%E5%AE%9A%E5%88%86%E6%94%AF%E6%8B%89%E4%BB%A3%E7%A0%81/</guid>
      <description>git clone 不指定分支 1  git clone http://10.1.1.11/service/tmall-service.git   git clone 指定分支 1  git clone -b dev_jk http://10.1.1.11/service/tmall-service.git   命令中：多了一个 -b dev-jk,这个dev_jk就是分支，http://10.1.1.11/service/tmall -service.git为源码的仓库地址</description>
    </item>
    
    <item>
      <title>Programmatically_navigate_using_react_router</title>
      <link>https://sy123.ml/2020/02/09/programmatically_navigate_using_react_router/</link>
      <pubDate>Sun, 09 Feb 2020 11:33:00 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/02/09/programmatically_navigate_using_react_router/</guid>
      <description>React Router v5.1.0 with hooks There is a new useHistory hook in React Router &amp;gt;5.1.0 if you are using React &amp;gt;16.8.0 and functional components.
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  import { useHistory } from &amp;#34;react-router-dom&amp;#34;; function HomeButton() { const history = useHistory(); function handleClick() { history.push(&amp;#34;/home&amp;#34;); } return ( &amp;lt;button type=&amp;#34;button&amp;#34; onClick={handleClick}&amp;gt; Go home &amp;lt;/button&amp;gt; ); }   React Router v4 With v4 of React Router, there are three approaches that you can take to programmatic routing within components.</description>
    </item>
    
    <item>
      <title>npm和yarn如何查看源和换源</title>
      <link>https://sy123.ml/2020/02/06/npm%E5%92%8Cyarn%E5%A6%82%E4%BD%95%E6%9F%A5%E7%9C%8B%E6%BA%90%E5%92%8C%E6%8D%A2%E6%BA%90/</link>
      <pubDate>Thu, 06 Feb 2020 18:28:50 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/02/06/npm%E5%92%8Cyarn%E5%A6%82%E4%BD%95%E6%9F%A5%E7%9C%8B%E6%BA%90%E5%92%8C%E6%8D%A2%E6%BA%90/</guid>
      <description>npm和yarn查看源和换源： 1 2 3 4 5 6 7  npm config get registry # 查看npm当前镜像源 npm config set registry https://registry.npm.taobao.org/ # 设置npm镜像源为淘宝镜像 yarn config get registry # 查看yarn当前镜像源 yarn config set registry https://registry.npm.taobao.org/ # 设置yarn镜像源为淘宝镜像   镜像源地址部分如下： npm --- https://registry.npmjs.org/ cnpm --- https://r.cnpmjs.org/ taobao --- https://registry.npm.taobao.org/ nj --- https://registry.nodejitsu.com/ rednpm --- https://registry.mirror.cqupt.edu.cn/ npmMirror --- https://skimdb.npmjs.com/registry/ deunpm --- http://registry.enpmjs.org/ </description>
    </item>
    
    <item>
      <title>Socket programing Permission denied</title>
      <link>https://sy123.ml/2020/02/05/socket-programing-permission-denied/</link>
      <pubDate>Wed, 05 Feb 2020 16:04:13 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/02/05/socket-programing-permission-denied/</guid>
      <description>listen tcp :443: bind: permission denied If you want to bind to a privileged port (ports less than 1024). You either need to be root or have the CAP_NET_BIND_SERVICE capability.</description>
    </item>
    
    <item>
      <title>win10输入法不显示候选词解决方法</title>
      <link>https://sy123.ml/2020/02/05/win10%E8%BE%93%E5%85%A5%E6%B3%95%E4%B8%8D%E6%98%BE%E7%A4%BA%E5%80%99%E9%80%89%E8%AF%8D%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</link>
      <pubDate>Wed, 05 Feb 2020 13:12:53 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/02/05/win10%E8%BE%93%E5%85%A5%E6%B3%95%E4%B8%8D%E6%98%BE%E7%A4%BA%E5%80%99%E9%80%89%E8%AF%8D%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</guid>
      <description>精简系统后自带的输入法不显示候选词 懒得折腾直接切换成老版本就完事，位置在输入法-设置-常规-使用以前版本的微软拼音输入法 </description>
    </item>
    
    <item>
      <title>Linux yay 命令</title>
      <link>https://sy123.ml/2020/02/05/linux-yay-%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Wed, 05 Feb 2020 12:57:49 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/02/05/linux-yay-%E5%91%BD%E4%BB%A4/</guid>
      <description>又一个酸奶：Arch Linux的一个实用程序，用于从Arch User Repository构建和安装软件包。
另见pacman。
从repos和AUR交互式搜索和安装包： 1  yay {{package_name|search_term}}   同步和更新repos和AUR中的所有包： 1  yay   仅同步和更新AUR包： 1  yay -Sua   从repos和AUR安装新包： 1  yay -S {{package_name}}   在包数据库中搜索repos和AUR中的关键字： 1  yay -Ss {{keyword}}   显示已安装包和系统运行状况的统计信息： 1  yay -Ps    2020-04-20更新
 curl: (33) HTTP server doesn&amp;rsquo;t seem to support byte ranges. Cannot resume. 选择清空之前下载就可以
或者执行：
1  rm -rf ~/.cache/yay/*   </description>
    </item>
    
    <item>
      <title>Linux_disable_IPv6</title>
      <link>https://sy123.ml/2020/01/31/linux_disable_ipv6/</link>
      <pubDate>Fri, 31 Jan 2020 12:32:48 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/01/31/linux_disable_ipv6/</guid>
      <description>IPv6被认为是IPv4的替代产品，它用来解决现有IPv4地址空间即将耗尽的问题。 但目前，开启IPv6可能会导致一些问题。因此有时我们需要关闭IPv6。 下面是IPv6的关闭方法应该适用于所有主流的Linux发行版包括Ubuntu、Debian、CentOS。
IPv6在CentOS6.5系统中默认是启用状态，通过以下方式可以确认IPv6的状态
1.1.查看系统IPv6的启用状态 以下命令返回值为0表示IPv6启用，1表示禁用
1 2 3 4 5  cat /proc/sys/net/ipv6/conf/all/disable_ipv6 cat /proc/sys/net/ipv6/conf/default/disable_ipv6 ifconfig ip address list netstat -anptl   1.2.查看内核模块调用 有返回结果，说明IPv6模块已启用，可以看出那些程序进行了调用，反之没有启用
lsmod | grep ipv6
2.禁用IPv6 2.1.临时禁用IPv6 命令行调整内核参数，临时禁用IPv6
1 2 3 4 5  echo 1 &amp;gt;/proc/sys/net/ipv6/conf/all/disable_ipv6 echo 1 &amp;gt;/proc/sys/net/ipv6/conf/default/disable_ipv6 # 或着 sysctl -w net.ipv6.conf.all.disable_ipv6=1 sysctl -w net.ipv6.conf.default.disable_ipv6=1   2.2.永久禁用IPv6 1 2 3 4 5 6 7 8  echo &amp;#34; &amp;#34;&amp;gt;&amp;gt;/etc/sysctl.conf echo &amp;#34;# made for disabled IPv6 in $(date +%F)&amp;#34;&amp;gt;&amp;gt;/etc/sysctl.</description>
    </item>
    
    <item>
      <title>Linux下格式化U盘</title>
      <link>https://sy123.ml/2020/01/26/linux%E4%B8%8B%E6%A0%BC%E5%BC%8F%E5%8C%96u%E7%9B%98/</link>
      <pubDate>Sun, 26 Jan 2020 21:41:53 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/01/26/linux%E4%B8%8B%E6%A0%BC%E5%BC%8F%E5%8C%96u%E7%9B%98/</guid>
      <description>windows下格式化u盘很简单，要么直接右键格式化，要么进入硬盘分区去格式化。那么Linux下呢？ 其实Linux下格式化u盘也十分简单，只需要几条命令就可以了：
查看磁盘情况 sudo fdisk -l 可以看到有一个/dev/sdb的磁盘就是我们插入的u盘了，大小为28.8GB，类型为NTFS。
2. 删除分区 1 2 3 4 5 6  sudo fdisk /dev/sdb m # 获取帮助命令 d # 删除分区 n # 新建分区 p # 打印分区表 w # 写入分区表并退出   一定要记得最后的w命令。
3. 格式化分区 格式化分区只需要使用mkfs.+（format）命令,例如格式化为fat格式，则在终端输入以下命令：
1 2 3  sudo mkfs.vfat -L labelname /dev/sdb1 # -L命令是可选，为你的u盘重新命名 # 最后的/dev/sdb1一定要是设备名   在windows下，我们常用的格式是ntfs，但是Linux默认是不支持ntfs格式的，所以我们需要安装另一个包NTFS-3G：
1 2  sudo pacman -S ntfs-3g sudo mkfs.ntfs -Q -L labelname /dev/sdb1   现在我们就将u盘格式化为ntfs格式了，可以轻松的在windows下使用了。</description>
    </item>
    
    <item>
      <title>Set_all_Java_apps_to_use_GTK&#43;_font_&amp;_theme_settings</title>
      <link>https://sy123.ml/2020/01/22/set_all_java_apps_to_use_gtk-_font__theme_settings/</link>
      <pubDate>Wed, 22 Jan 2020 01:12:54 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/01/22/set_all_java_apps_to_use_gtk-_font__theme_settings/</guid>
      <description>Introduction This fix makes your Java apps use your GTK+ theme (colours &amp;amp; such) &amp;amp; your chosen font settings. Here is how it looks like:
  Java default look   Java GTK+ look   How do you do it? Set the variable _JAVA_OPTIONS by running this command in a terminal:
1  export _JAVA_OPTIONS=&amp;#34;-Dawt.useSystemAAFontSettings=on -Dswing.aatext=true -Dswing.defaultlaf=com.sun.java.swing.plaf.gtk.GTKLookAndFeel -Dswing.crossplatformlaf=com.sun.java.swing.plaf.gtk.GTKLookAndFeel ${_JAVA_OPTIONS}&amp;#34;   First test to see if the outcome is what you expect by running your Java app from the same terminal window.</description>
    </item>
    
    <item>
      <title>Win10 清除 PowerShell 历史记录</title>
      <link>https://sy123.ml/2020/01/20/win10-%E6%B8%85%E9%99%A4-powershell-%E5%8E%86%E5%8F%B2%E8%AE%B0%E5%BD%95/</link>
      <pubDate>Mon, 20 Jan 2020 23:11:09 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/01/20/win10-%E6%B8%85%E9%99%A4-powershell-%E5%8E%86%E5%8F%B2%E8%AE%B0%E5%BD%95/</guid>
      <description>PowerShell&amp;rsquo;s own history mechanism (Get-History, Clear-History) is host-independent, which is why - somewhat unexpectedly - you also need to clear the hosts&amp;rsquo;s command history separately.
As for the console host&amp;rsquo;s own history feature:
doskey-style history feature, before module PSReadline shipped with PowerShell (see below):
There is no saved history - a history is kept only for the duration of the current session. Alt+F7 must be used to clear the console&amp;rsquo;s history, with no (obvious) programmatic way to do it (in a cmd.</description>
    </item>
    
    <item>
      <title>Sysprep命令详解</title>
      <link>https://sy123.ml/2020/01/20/sysprep%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Mon, 20 Jan 2020 06:12:53 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/01/20/sysprep%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/</guid>
      <description>如果你打算创建安装映像以部署到不同的计算机上，则必须运行带有 /generalize 选项的 Sysprep 命令，即使其他计算机具有相同的硬件配置。Sysprep /generalize 命令从 Windows 安装删除唯一性信息，这使得你可以在不同的计算机上重复使用映像。下次启动 Windows 映像时，将运行 specialize 配置阶段。
Sysprep 命令行选项 下列命令行选项可用于 Sysprep：
1 2 3 4 5 6 7 8 9 10 11  Sysprep.exe [/oobe | /audit] [/generalize] [/mode:vm] [/reboot | /shutdown | /quit] [/quiet] [/unattend:&amp;lt;answerfile&amp;gt;]   下表列出了 Sysprep 命令行选项：
   选项 描述     /audit 重新启动计算机进入审核模式。审核模式使你可以将其他驱动程序或应用程序添加到 Windows。你还可以在将 Windows 安装发送给最终用户前对其进行测试。例如：   Sysprep /audit 如果指定了应答文件，则 Windows 安装程序的审核模式将运行 auditSystem 和 auditUser 配置阶段。   /generalize 准备要作为映像的 Windows 安装。Sysprep 工具会从 Windows 安装中删除所有唯一的系统信息。Sysprep 将重置安全 ID (SID)，清除所有系统还原点，并删除事件日志。例如：   Sysprep /generalize /shutdown 下次计算机启动时，将运行 specialize 配置阶段。该配置阶段将创建一个新安全 ID (SID)。   /oobe 重新启动计算机进入 OOBE 模式。例如：   Sysprep /generalize /shutdown /oobe OOBE 允许最终用户自定义其 Windows 操作系统、创建用户帐户、命名计算机和执行其他任务。Sysprep 在 OOBE 启动前，将处理应答文件中 oobeSystem 配置阶段的所有设置。   /mode:vm Windows(R) 8 的新增内容。一般化虚拟硬盘 (VHD)，这样可以将其部署为相同虚拟机 (VM) 或虚拟机监控程序上的 VHD。VM 重新启动后，该 VM 可以引导到 OOBE。例如：   Sysprep /generalize /oobe /mode:vm 仅有的适用于 VM 模式的额外交换机为“/reboot”、“/shutdown”和“/quit”。必须使用相同的硬件配置文件在虚拟机或虚拟机监控程序上部署 VHD。例如，如果你已在 Microsoft Hyper-V 中创建 VHD，仅可以使用匹配的硬件配置文件将 VHD 部署到 Microsoft Hyper-V VM。使用不同的硬件配置文件将 VHD 部署到不同的 VM 可能会导致意外的问题。   /reboot 重新启动计算机。可以使用该选项审核计算机并确保首次运行体验正确工作。   /shutdown 在 sysprep 命令完成运行后关闭计算机。   /quiet 运行 Sysprep 工具而不显示屏幕确认消息。如果自动运行 Sysprep 工具，则可以使用该选项。   /quit Sysprep 运行指定命令后，无需重新启动或关闭计算机即可关闭 Sysprep 工具。   /unattend: 在无人参与的安装过程中，将应答文件中的设置应用到 Windows，其中  指定要使用的应答文件的路径和文件名。例如：Sysprep /audit /reboot /unattend:F:\Unattend.</description>
    </item>
    
    <item>
      <title>cmd命令行修改windows虚拟内存pagefile.sys</title>
      <link>https://sy123.ml/2020/01/20/cmd%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%BF%AE%E6%94%B9windows%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98pagefile.sys/</link>
      <pubDate>Mon, 20 Jan 2020 05:36:05 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/01/20/cmd%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%BF%AE%E6%94%B9windows%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98pagefile.sys/</guid>
      <description>1 2 3 4 5 6 7 8 9 10 11 12  # 查看当前设置 wmic pagefile list /format:list # 取消自动管理分页文件大小 wmic computersystem where name=&amp;#34;%computername%&amp;#34; set AutomaticManagedPagefile=False  # 修改页面文件大小 最小1024MB，最大4096MB wmic pagefileset where name=&amp;#34;C:\\pagefile.sys&amp;#34; set InitialSize=1024,MaximumSize=4096 # 重启生效 shutdown -r -t 0   </description>
    </item>
    
    <item>
      <title>ArchLinux配置Samba服务与Windows共享文件</title>
      <link>https://sy123.ml/2020/01/19/archlinux%E9%85%8D%E7%BD%AEsamba%E6%9C%8D%E5%8A%A1%E4%B8%8Ewindows%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6/</link>
      <pubDate>Sun, 19 Jan 2020 15:43:57 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/01/19/archlinux%E9%85%8D%E7%BD%AEsamba%E6%9C%8D%E5%8A%A1%E4%B8%8Ewindows%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6/</guid>
      <description>由于最近加班，俺的高清下载机中，已经累积了200G+的高清电影了，嘿嘿，看来平时的带宽没浪费，充分利用了。在这之前，由于懒于配置Samba，我都是偷懒，用的SFTP，通过Linux帐号来登录下载机，然后把要看的电影，一个一个的用SFTP的方式，给拖到我的电脑上，再欣赏。其实这样的效率挺低的，而且又浪费硬盘，又浪费时间。
Linux的Samba，为Linux与Linux之间，还有Linux与Windows之间，提供了一种很好的文件共享的方式。周末了，抽了点时间，把Samba给配置好了。这样，就可以直接在我的电脑上，通过共享目录的方式，来访问高清下载机中的高清电影了，还可以直接播放，方便多了……
下面记录一下ArchLinux中配置Samba的过程，留作备份。
首先，是安装Samba，ArchLinux可以直接从源中获取并安装Samba：
1  pacman -S samba   等待数秒，安装成功后，你会在/etc中找到一个叫samba的目录，进入这个目录，有一个默认的配置文件样本，叫做smb.conf.default。这是官方的范本配置文件，里面有详细的注释，和每一个配置项的解释。不过这文件挺长，建议你有空的时候，可以详细看看每个参数的含义。这里俺就不累述了，还是来个简洁点的配置吧：
在/etc/samba目录中，直接建立一个空的smb.conf，然后将如下内容粘贴过去：
1 2 3 4 5 6 7 8 9 10 11  [global] workgroup = WORKGROUP security = user [Movies] path = /home/transmission/Downloads valid users = samba public = no writable = yes printable = no create mask = 0644   这个够简洁了吧？简单说明一下，global配置节，是一个全局配置节，里面配置了两项：
workgroup，这个顾名思义，计算机的工作组名称，比如我是和我的Win7来共享文件，最好把工作组和我的Win7设成通一个工作组，这样方便Win7通过网络发现来找到我的下载机。这里，我的win7工作组名字，就叫做：WORKGROUP了
security，这是指共享目录的安全认证形式，security的值，有两种可以设置：
第一种，是设成上面例子中的user，意思是在访问共享目录的时候，需要通过用户名和密码的方式来认证，可以给共享目录提供一定的安全性保护。
第二种，是设成share，这样的话，网络中的任何人都可以通过共享目录的方式来访问你共享的内容了。
在这里，我选择了用户名与密码认证的方式，所以设成了user
下面的Movies节点，可以有多个(如果你想设置多个共享目录的话)
[Movies] 这里设置的名字，就是能够在Windows中看到的名字，可以随意更改
下面的path，就是你想共享的Linux目录了，我设成了我的Transmission的下载目录。
后面的valid users，是一个用户帐号，也即通过用户名和密码来访问共享目录的那个帐号，如果你把security设成share，这一项可以去掉。
下面是一些权限的设置，以及是否允许访问者有写入共享目录的权限，各个参数可以查看Samba文档，就不一一介绍了。
最后，说一下security设成user后，帐号的设置问题。
首先，你可以添加一个新的Linux帐号，专门用来访问共享目录用。比如，我就添加了一个帐号，叫做Samba</description>
    </item>
    
    <item>
      <title>iptables 禁止端口和开放端口</title>
      <link>https://sy123.ml/2020/01/17/iptables-%E7%A6%81%E6%AD%A2%E7%AB%AF%E5%8F%A3%E5%92%8C%E5%BC%80%E6%94%BE%E7%AB%AF%E5%8F%A3/</link>
      <pubDate>Fri, 17 Jan 2020 22:35:49 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/01/17/iptables-%E7%A6%81%E6%AD%A2%E7%AB%AF%E5%8F%A3%E5%92%8C%E5%BC%80%E6%94%BE%E7%AB%AF%E5%8F%A3/</guid>
      <description>1.首先介绍一下指令和相关配置文件 启动指令:service iptables start
重启指令:service iptables restart
关闭指令:service iptables stop
然后是相关配置:/etc/sysconfig/iptables
如何操作该配置呢？
vim /etc/sysconfig/iptables
然后进去修改即可，修改完了怎么办？这里很多人会想到/etc/rc.d/init.d/iptables save指令，但是一旦你这么干了你刚才的修改内容就白做了。。。
具体方法是：
只修改/etc/sysconfig/iptables 使其生效的办法是修改好后先service iptables restart，然后才调用/etc/rc.d/init.d/iptables save，
因为/etc/rc.d/init.d/iptables save会在iptables服务启动时重新加载，要是在重启之前直接先调用了/etc/rc.d/init.d/iptables save那么你
的/etc/sysconfig/iptables 配置就回滚到上次启动服务的配置了，这点必须注意！！！
2.下面介绍一些指令用法（主要还是man iptables看下相关资料才行）
-A：指定链名
-p：指定协议类型
-d：指定目标地址
&amp;ndash;dport：指定目标端口（destination port 目的端口）
&amp;ndash;sport：指定源端口（source port 源端口）
-j：指定动作类型
3.如果我不像修改文件直接打命令可以吗，当然没问题，步骤如下:
例如我给SSH加放行的语句：
添加input记录： iptables -A INPUT -p tcp &amp;ndash;dport 22 -j ACCEPT
添加output记录： iptables -A OUTPUT -p tcp &amp;ndash;sport 22 -j ACCEPT
最后注意需要再执行一下 /etc/init.d/iptables save，这样这两条语句就保存到刚才那个/etc/sysconfig/iptables 文件中了。
4.接下来说明一下步骤，如果机器不在我身边，我只能SSH进去做iptables规则，那么我必须注意每一步，千万别搞错了，否则就SSH链接不上都有可能！
首先要做的是给咱的SSH进行ACCEPT配置，以免直接无法连接的情况发生:
1.如果SSH端口是22（这里不建议用默认端口最好改掉SSH端口）
iptables -A INPUT -p tcp &amp;ndash;dport 22 -j ACCEPT</description>
    </item>
    
    <item>
      <title>批处理关闭或开启NETBIOS</title>
      <link>https://sy123.ml/2020/01/17/%E6%89%B9%E5%A4%84%E7%90%86%E5%85%B3%E9%97%AD%E6%88%96%E5%BC%80%E5%90%AFnetbios/</link>
      <pubDate>Fri, 17 Jan 2020 19:23:06 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/01/17/%E6%89%B9%E5%A4%84%E7%90%86%E5%85%B3%E9%97%AD%E6%88%96%E5%BC%80%E5%90%AFnetbios/</guid>
      <description>禁用NETBIOS后，局域网内计算机不可以在地址栏用主机名访问你的主机，更安全。
以下为批处理自动关闭netbios脚本:
1 2 3 4 5 6 7 8 9 10 11 12  @echo off rem off_netbios_Self_Del for /L %%a in (1,1,20) do ( wmic nicconfig where index=&amp;#39;%%a&amp;#39; call settcpipnetbios 2 ) cd /d %~dp0 if exist one_time.cmd ( del /f /q %0 exit ) rename %0 one_time.cmd exit   功能: 一键关闭netbios，执行完第二次后自己删除自己。
适用性:， 在win7及win2008测试通过，其它系统没测。
说明: 用法：复制上述脚本随便起个名，扩展名改为bat或者cmd。最好把文件放到开机启动目录，开机就运行。windows下自启动目录如下： C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Startup
如何开启NETBIOS? 把上述代码第四行最后数字改为1即为开启，改为0即为默认设置，为2时代表关闭（上述代码已默认设为关闭NETBIOS)。
为何要第二次才删除？ 如果是新装或者复制了系统，第一次开机是检测并安装网卡设备。如果未安装完网卡就运行完脚本，那脚本就发挥不了作用。
运行流程： 在运行第一次的时候会自动把本脚本重命名为one_time.cmd 在第二次运行脚本监测到有one_time.cmd文件后会自我删除。 本脚本用for循环20次，每个网卡都尝试关闭NETBIOS,（一般系统有十多个网卡序号）如果不够（不放心）就就把第三行代码由数字20改为30或更多。如果想要查看自己的网卡序号可以在CMD里输入以下命令：wmic nicconfig Get Caption,index</description>
    </item>
    
    <item>
      <title>玩转WSL-用Samba服务替代Win10原生的文件共享</title>
      <link>https://sy123.ml/2020/01/17/%E7%8E%A9%E8%BD%ACwsl-%E7%94%A8samba%E6%9C%8D%E5%8A%A1%E6%9B%BF%E4%BB%A3win10%E5%8E%9F%E7%94%9F%E7%9A%84%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB/</link>
      <pubDate>Fri, 17 Jan 2020 18:57:51 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/01/17/%E7%8E%A9%E8%BD%ACwsl-%E7%94%A8samba%E6%9C%8D%E5%8A%A1%E6%9B%BF%E4%BB%A3win10%E5%8E%9F%E7%94%9F%E7%9A%84%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB/</guid>
      <description>习惯了Linux系统的人们，肯定觉得Samba服务更加灵活和方便，那如何在Windows系统上搭建高效的Samba服务呢？本文介绍了通过WSL在Win10系统上，搭建Samba文件共享服务。
背景是家里只有一个台式机，一方面家里人偶尔使用，另一方面，它是家里的数据中心，挂载了多块硬盘。所以系统用的是Windows10，但是为了方便灵活得进行文件共享，一直考虑搭建Samba服务。达到此目的的方案有多种，可以考虑用虚拟机，例如：VMWare、VirtualBox、Hyper-V，也可以考虑使用CygWin，因为Windows10提供了WSL，所以本文介绍了另一种方式，也是运行效率比较高的一种方式，使用WSL搭建Samba服务。
背景知识 Windows文件共享服务 使用网络对外提供文件访问服务，现在广泛用于局域网内部文件的共享，例如：小米盒子、手机、PC机、包括Mac，通过139或445端口。
139 - 早期Windows的SMB运行于NBT（NetBIOS over TCP/IP）上，使用139端口 445 - Windows2000及以上版本，SMB可以直接运行与TCP/IP上，使用445端口，效率更高 对不同版本的Windows做了抓包测试，发现WinXP只访问139端口，Win7同时访问139与445端口，Win10只访问445端口，测试结果如下：
Windows10 win10-err
win10-pkg
Windows7 win7-err
win7-pkg
WindowsXP winxp-err
winxp-pkg
WSL（Windows Subsystem for Linux） 是在Windows10系统上，对Windows内核进行了封装，使其可以直接支持ELF格式的Linux可执行程序，感觉有点像GNU/Windows。 现在基于WSL，已经有了多个Linux发行版，包括Ubuntu、Debian、Suse、Kali等，能够非常方便得在Windows里面运行Linux发行版，学习和使用各种Linux工具，同时也能够将Linux里面各种服务无缝集成到Windows环境中，例如：Samba服务、SSH服务等
Samba服务 为了实现UNIX、Linux等非Windows能够访问Windows的文件共享资源，之前有个大牛将SMB（Server Message Block）协议进行了逆向分析，然后根据逆向分析的协议开发了一套开源软件Samba，可以让UNIX、Linux、Mac等系统能够与Windows之间进行文件共享。目前最新的Samba甚至可以提供AD、DC等服务。
总体方案 根据以上背景知识，在Windows10上通过WSL搭建Samba服务的方案如下：
释放Windows占用的139，445端口 安装WSL和Ubuntu发行版 安装Samba服务，并且配置 更改防火墙配置 最后测试 实施步骤 释放Windows占用的139，445端口 释放139端口 安装完毕的Windows10系统，默认情况下会监听139与445端口，通过netstat -a|findstr LISTENING可以查看： cmd001 禁用NetBIOS over TCP/IP，通过如下操作禁用，在“更改适配器设置”界面，双击对应网卡，打开“以太网状态”界面： netbios001 点击“属性”打开“以太网属性”界面： netbios002 选中“TCP/IPv4”项目，点击“属性”，打开“TCP/IPv4属性”界面： netbios003 点击“高级”并选中“WINS”页签，勾选“禁用TCP/IP上的NetBIOS”： 点击“确定”以后生效，如果有多块网卡，每块网卡都要按照如上步骤操作，操作完毕以后，还是通过netstat命令进行查看，发现139端口已经不再监听。 netbios005 释放445端口 通过“WIN+R”打开运行窗口，输入：services.msc，打开服务管理界面： services001 找到Computer Browser服务，双击该服务打开属性界面，将“启动类型”修改为禁用，并且直接点击“停止”： services002 找到Server服务： services003 双击Server服务，打开属性界面，将“启动类型”修改为禁用，并且直接点击“停止”： services004 设置完毕以后重启系统。 重启完毕以后，再通过netstat -a|findstr LISTENING命令检查端口使用情况，发现445端口已经释放成功。 cmd002 安装WSL和Ubuntu发行版 在“程序和功能”管理界面，点击“启用或关闭Windows功能”，在“Windows功能”列表中，勾选“适用于Linux的Windows子系统”（注意：不同的Windows版本可能名字有所差别，我试验的是17134.</description>
    </item>
    
    <item>
      <title>Windows 下使用 Diskpart 命令分区</title>
      <link>https://sy123.ml/2020/01/16/windows-%E4%B8%8B%E4%BD%BF%E7%94%A8-diskpart-%E5%91%BD%E4%BB%A4%E5%88%86%E5%8C%BA/</link>
      <pubDate>Thu, 16 Jan 2020 22:27:22 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/01/16/windows-%E4%B8%8B%E4%BD%BF%E7%94%A8-diskpart-%E5%91%BD%E4%BB%A4%E5%88%86%E5%8C%BA/</guid>
      <description>Diskpart 命令简介 Diskpart 命令是 Windows 环境下的一个命令，利用 Diskpart 可实现对硬盘的分区管理，包括创建分区、删除分区、合并（扩展）分区，设置分区后即刻生效，免去了重启电脑的操作。
正常运行该命令时需要系统服务的支持，所以在纯 DOS、XP 内核的 WinPE 环境下都是不能运行的，但是在 Win7 的预安装环境下却是可以的。利用 Diskpart 命令来分区，既不用借助第三方工具，也不会产生 100MB 的“系统保留”分区，其次分区操作直接设置即刻生效，不用重新启动计算机。
利用 Diskpart 命令分区 当安装程序运行到创建磁盘分区界面时按下 Shift+F10 启动命令窗口。
键入 Diskpart 进入 Diskpart 的命令环境，其提示符为 DISKPART&amp;gt;。
在此提示下键入相应命令就可以进行分区操作，具体用到的命令有：
1 2 3 4 5 6  Clean List Select Create Format Exit   这些命令的使用方法可以在 Diskpart 命令提示符下键入 Help 或者通过网络查询，如果不清楚可以查看。
使用 List Disk 命令显示的目标磁盘若为 1 号，则建立分区的步骤如下：以下是命令顺序及操作解释：
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  List Disk：显示本机的所有磁盘，以便正确操作目标磁盘 Select Disk 1：选择 0 号磁盘 Clean ：清除 0 号磁盘上的所有分区 Create Partition Primary Size=512000 ：创建主分区，容量为：512000MB Active：激活主分区 Format Quick：快速格式化当前分区 Create Partition Extended：创建扩展分区 Create Partition Logical Size=512000：创建逻辑分区一，容量为：512000MB Format Quick：快速格式化当前分区 Create Partition Logical Size=512000：创建逻辑分区二，容量为：512000MB Format Quick ：快速格式化当前分区 Create Partition Logical ：创建逻辑分区三，大小为剩余的容量 Format Quick ：快速格式化当前分区 Exit ：退出Diskpart命令环境 Exit ：退出命令窗口   这里要注意的是 Diskpart 分区时，一定要选对目标磁盘，当前被选中的磁盘 / 分区前面会有 * 号标志，可以用 List Disk / Partition 来进行查看。</description>
    </item>
    
    <item>
      <title>Linux 让终端走代理的几种方法</title>
      <link>https://sy123.ml/2020/01/11/linux-%E8%AE%A9%E7%BB%88%E7%AB%AF%E8%B5%B0%E4%BB%A3%E7%90%86%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95/</link>
      <pubDate>Sat, 11 Jan 2020 16:00:15 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/01/11/linux-%E8%AE%A9%E7%BB%88%E7%AB%AF%E8%B5%B0%E4%BB%A3%E7%90%86%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95/</guid>
      <description>最近使用终端git的时候觉得速度有点慢，考虑一下是不是可以通过让终端走代理的方式来加快速度，尝试了一下以后确实是可以的。如果只是为了设置git的话可以直接在文章最后找到git的设置代理的方法。
前期准备: 认识代理的方式:代理是通过客户端与服务端通信,传输服务端能够访问到的资源文件,再由服务端客户端通信返回给客户端,从而间接访问服务端能访问的资源.
以socket5通信为例子,我们通过客户端(自己想一想酸酸乳)向服务端发送socket通信,服务端访问资源再由socket通信返回给客户端.但是这里面的通信设置必须通过端口来进行通信,类似switchyomega设置过程一样,我们会设定走的代理方式是127.0.0.1:1080;这个意思就是通过本地的1080端口来进行通信.具体在终端上如何使用呢?
如果默认是socket5通信且端口是1080,即127.0.01:1080的方式 使用如下两种方式
socks5://127.0.0.1:1080 这里无关自己代理客户端是不是酸酸乳或酸酸只要是通过socket通信即可,前提是满足已经能够正常代理访问.
第二种是http代理,即通信方式为http而不是socket http://127.0.0.1:12333 详细举例:
这里的客户端有两种方式,一个是socket通信,一个是http通信,两个方式对应的端口不同,在下文中不同代理方式设置的端口也不同. 实在不懂的记住:先把代理调试通,然后就直接打开switchyomega看看自己的设置,都是一样的
方法一：（推荐使用） 为什么说这个方法推荐使用呢？因为他只作用于当前终端中，不会影响环境，而且命令比较简单 在终端中直接运行：
1  export http_proxy=http://proxyAddress:port   如果你是SSR,并且走的http的代理端口是12333，想执行wget或者curl来下载国外的东西，可以使用如下命令：
1  export http_proxy=http://127.0.0.1:12333   如果是https那么就经过如下命令：
1  export https_proxy=http://127.0.0.1:12333   方法二 ： 这个办法的好处是把代理服务器永久保存了，下次就可以直接用了 把代理服务器地址写入shell配置文件.bashrc或者.zshrc 直接在.bashrc或者.zshrc添加下面内容
1 2  export http_proxy=&amp;#34;http://localhost:port&amp;#34; export https_proxy=&amp;#34;http://localhost:port&amp;#34;   或者走socket5协议（ss,ssr）的话，代理端口是1080
1 2  export http_proxy=&amp;#34;socks5://127.0.0.1:1080&amp;#34; export https_proxy=&amp;#34;socks5://127.0.0.1:1080&amp;#34;   或者干脆直接设置ALL_PROXY
1  export ALL_PROXY=socks5://127.0.0.1:1080   最后在执行如下命令应用设置
1  source ~/.</description>
    </item>
    
    <item>
      <title>百度云分享下载链接</title>
      <link>https://sy123.ml/2020/01/10/%E7%99%BE%E5%BA%A6%E4%BA%91%E5%88%86%E4%BA%AB%E4%B8%8B%E8%BD%BD%E9%93%BE%E6%8E%A5/</link>
      <pubDate>Fri, 10 Jan 2020 07:48:32 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/01/10/%E7%99%BE%E5%BA%A6%E4%BA%91%E5%88%86%E4%BA%AB%E4%B8%8B%E8%BD%BD%E9%93%BE%E6%8E%A5/</guid>
      <description>最好是先复制到自己的网盘。
  点击分享，生成链接。
  点击链接，进入页面。在console模式下输入如下代码：
  1 2 3 4 5 6 7 8 9  $.ajax({ type: &amp;#34;POST&amp;#34;, url: &amp;#34;/api/sharedownload?sign=&amp;#34;+yunData.SIGN+&amp;#34;&amp;amp;timestamp=&amp;#34;+yunData.TIMESTAMP, data: &amp;#34;encrypt=0&amp;amp;product=share&amp;amp;uk=&amp;#34;+yunData.SHARE_UK+&amp;#34;&amp;amp;primaryid=&amp;#34;+yunData.SHARE_ID+&amp;#34;&amp;amp;fid_list=%5B&amp;#34;+yunData.FS_ID+&amp;#34;%5D&amp;#34;, dataType: &amp;#34;json&amp;#34;, success: function(d){ window.location.href = d.list[0].dlink; } });   客户端接口加密算法</description>
    </item>
    
    <item>
      <title>Github Pull</title>
      <link>https://sy123.ml/2020/01/08/github-pull/</link>
      <pubDate>Wed, 08 Jan 2020 06:27:26 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/01/08/github-pull/</guid>
      <description>github一直都是在上面拿资源。感觉有点愧对大众。是不是应该奉献自己的力量给github来推动开源的发展呢。 在两个月前第一次在github新建项目，并且push了一套比赛的源码。但。。。今天竟然忘了怎么用git了。又复习了一次。所以这次打算在这里作个笔记。给自己做个的或是给git新手做的也好吧。为互联网贡献一点力量。
安装git和配置就不说了。
进入到等下要push的代码的目录文件夹，打开bash 请输入图片描述
进入到等下要push的代码的目录文件夹，打开bash 请输入图片描述
初始化 1  git init   初始化后在本地代码库会自动创建一个.git隐藏文件，这个就是本地代码库
加载文件 1  git add .   . 是把文件夹里面的所有文件都加载进来
还可以单个加载
1  git add index.html,test.html   四：
提交文件，创建时间点 1  git commit -m &amp;#34;init commit&amp;#34;   -m &amp;ldquo;这里的文件是注释&amp;rdquo;
创建之后可以随时回到这个时间点，可以看到有4个文件被修改了，47个插入，51个删除 请输入图片描述
可以随时用
1  git status   查看git的状态
推送代码 第一次推送的时候要添加远程的代码库到配置
1  git remote add origin https://github.com/zhong635725959/droplook.git   origin可变，随自己喜欢
推送代码：
1  git push origin master   拉取代码强制合并：</description>
    </item>
    
  </channel>
</rss>