<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on sy123.ml</title>
    <link>https://sy123.ml/post/</link>
    <description>Recent content in Posts on sy123.ml</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>2007-2020 Zhili.</copyright>
    <lastBuildDate>Wed, 05 Feb 2020 16:04:13 +0800</lastBuildDate>
    
	<atom:link href="https://sy123.ml/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Socket programing Permission denied</title>
      <link>https://sy123.ml/2020/02/05/socket-programing-permission-denied/</link>
      <pubDate>Wed, 05 Feb 2020 16:04:13 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/02/05/socket-programing-permission-denied/</guid>
      <description>listen tcp :443: bind: permission denied If you want to bind to a privileged port (ports less than 1024). You either need to be root or have the CAP_NET_BIND_SERVICE capability.</description>
    </item>
    
    <item>
      <title>win10输入法不显示候选词解决方法</title>
      <link>https://sy123.ml/2020/02/05/win10%E8%BE%93%E5%85%A5%E6%B3%95%E4%B8%8D%E6%98%BE%E7%A4%BA%E5%80%99%E9%80%89%E8%AF%8D%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</link>
      <pubDate>Wed, 05 Feb 2020 13:12:53 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/02/05/win10%E8%BE%93%E5%85%A5%E6%B3%95%E4%B8%8D%E6%98%BE%E7%A4%BA%E5%80%99%E9%80%89%E8%AF%8D%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</guid>
      <description>精简系统后自带的输入法不显示候选词 懒得折腾直接切换成老版本就完事，位置在输入法-设置-常规-使用以前版本的微软拼音输入法 </description>
    </item>
    
    <item>
      <title>Linux yay 命令</title>
      <link>https://sy123.ml/2020/02/05/linux-yay-%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Wed, 05 Feb 2020 12:57:49 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/02/05/linux-yay-%E5%91%BD%E4%BB%A4/</guid>
      <description>又一个酸奶：Arch Linux的一个实用程序，用于从Arch User Repository构建和安装软件包。
另见pacman。
从repos和AUR交互式搜索和安装包： 1  yay {{package_name|search_term}}   同步和更新repos和AUR中的所有包： 1  yay   仅同步和更新AUR包： 1  yay -Sua   从repos和AUR安装新包： 1  yay -S {{package_name}}   在包数据库中搜索repos和AUR中的关键字： 1  yay -Ss {{keyword}}   显示已安装包和系统运行状况的统计信息： 1  yay -Ps   </description>
    </item>
    
    <item>
      <title>Linux_disable_IPv6</title>
      <link>https://sy123.ml/2020/01/31/linux_disable_ipv6/</link>
      <pubDate>Fri, 31 Jan 2020 12:32:48 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/01/31/linux_disable_ipv6/</guid>
      <description>IPv6被认为是IPv4的替代产品，它用来解决现有IPv4地址空间即将耗尽的问题。 但目前，开启IPv6可能会导致一些问题。因此有时我们需要关闭IPv6。 下面是IPv6的关闭方法应该适用于所有主流的Linux发行版包括Ubuntu、Debian、CentOS。
IPv6在CentOS6.5系统中默认是启用状态，通过以下方式可以确认IPv6的状态
1.1.查看系统IPv6的启用状态 以下命令返回值为0表示IPv6启用，1表示禁用
1 2 3 4 5  cat /proc/sys/net/ipv6/conf/all/disable_ipv6 cat /proc/sys/net/ipv6/conf/default/disable_ipv6 ifconfig ip address list netstat -anptl   1.2.查看内核模块调用 有返回结果，说明IPv6模块已启用，可以看出那些程序进行了调用，反之没有启用
lsmod | grep ipv6
2.禁用IPv6 2.1.临时禁用IPv6 命令行调整内核参数，临时禁用IPv6
1 2 3 4 5  echo 1 &amp;gt;/proc/sys/net/ipv6/conf/all/disable_ipv6 echo 1 &amp;gt;/proc/sys/net/ipv6/conf/default/disable_ipv6 # 或着 sysctl -w net.ipv6.conf.all.disable_ipv6=1 sysctl -w net.ipv6.conf.default.disable_ipv6=1   2.2.永久禁用IPv6 1 2 3 4 5 6 7 8  echo &amp;#34; &amp;#34;&amp;gt;&amp;gt;/etc/sysctl.conf echo &amp;#34;# made for disabled IPv6 in $(date +%F)&amp;#34;&amp;gt;&amp;gt;/etc/sysctl.</description>
    </item>
    
    <item>
      <title>Linux下格式化U盘</title>
      <link>https://sy123.ml/2020/01/26/linux%E4%B8%8B%E6%A0%BC%E5%BC%8F%E5%8C%96u%E7%9B%98/</link>
      <pubDate>Sun, 26 Jan 2020 21:41:53 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/01/26/linux%E4%B8%8B%E6%A0%BC%E5%BC%8F%E5%8C%96u%E7%9B%98/</guid>
      <description>windows下格式化u盘很简单，要么直接右键格式化，要么进入硬盘分区去格式化。那么Linux下呢？ 其实Linux下格式化u盘也十分简单，只需要几条命令就可以了：
查看磁盘情况 sudo fdisk -l 可以看到有一个/dev/sdb的磁盘就是我们插入的u盘了，大小为28.8GB，类型为NTFS。
2. 删除分区 1 2 3 4 5 6  sudo fdisk /dev/sdb m # 获取帮助命令 d # 删除分区 n # 新建分区 p # 打印分区表 w # 写入分区表并退出   一定要记得最后的w命令。
3. 格式化分区 格式化分区只需要使用mkfs.+（format）命令,例如格式化为fat格式，则在终端输入以下命令：
1 2 3  sudo mkfs.vfat -L labelname /dev/sdb1 # -L命令是可选，为你的u盘重新命名 # 最后的/dev/sdb1一定要是设备名   在windows下，我们常用的格式是ntfs，但是Linux默认是不支持ntfs格式的，所以我们需要安装另一个包NTFS-3G：
1 2  sudo pacman -S ntfs-3g sudo mkfs.ntfs -Q -L labelname /dev/sdb1   现在我们就将u盘格式化为ntfs格式了，可以轻松的在windows下使用了。</description>
    </item>
    
    <item>
      <title>Set_all_Java_apps_to_use_GTK&#43;_font_&amp;_theme_settings</title>
      <link>https://sy123.ml/2020/01/22/set_all_java_apps_to_use_gtk-_font__theme_settings/</link>
      <pubDate>Wed, 22 Jan 2020 01:12:54 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/01/22/set_all_java_apps_to_use_gtk-_font__theme_settings/</guid>
      <description>Introduction This fix makes your Java apps use your GTK+ theme (colours &amp;amp; such) &amp;amp; your chosen font settings. Here is how it looks like:
  Java default look   Java GTK+ look   How do you do it? Set the variable _JAVA_OPTIONS by running this command in a terminal:
1  export _JAVA_OPTIONS=&amp;#34;-Dawt.useSystemAAFontSettings=on -Dswing.aatext=true -Dswing.defaultlaf=com.sun.java.swing.plaf.gtk.GTKLookAndFeel -Dswing.crossplatformlaf=com.sun.java.swing.plaf.gtk.GTKLookAndFeel ${_JAVA_OPTIONS}&amp;#34;   First test to see if the outcome is what you expect by running your Java app from the same terminal window.</description>
    </item>
    
    <item>
      <title>Win10 清除 PowerShell 历史记录</title>
      <link>https://sy123.ml/2020/01/20/win10-%E6%B8%85%E9%99%A4-powershell-%E5%8E%86%E5%8F%B2%E8%AE%B0%E5%BD%95/</link>
      <pubDate>Mon, 20 Jan 2020 23:11:09 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/01/20/win10-%E6%B8%85%E9%99%A4-powershell-%E5%8E%86%E5%8F%B2%E8%AE%B0%E5%BD%95/</guid>
      <description>PowerShell&amp;rsquo;s own history mechanism (Get-History, Clear-History) is host-independent, which is why - somewhat unexpectedly - you also need to clear the hosts&amp;rsquo;s command history separately.
As for the console host&amp;rsquo;s own history feature:
doskey-style history feature, before module PSReadline shipped with PowerShell (see below):
There is no saved history - a history is kept only for the duration of the current session. Alt+F7 must be used to clear the console&amp;rsquo;s history, with no (obvious) programmatic way to do it (in a cmd.</description>
    </item>
    
    <item>
      <title>Sysprep命令详解</title>
      <link>https://sy123.ml/2020/01/20/sysprep%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Mon, 20 Jan 2020 06:12:53 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/01/20/sysprep%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/</guid>
      <description>如果你打算创建安装映像以部署到不同的计算机上，则必须运行带有 /generalize 选项的 Sysprep 命令，即使其他计算机具有相同的硬件配置。Sysprep /generalize 命令从 Windows 安装删除唯一性信息，这使得你可以在不同的计算机上重复使用映像。下次启动 Windows 映像时，将运行 specialize 配置阶段。
Sysprep 命令行选项 下列命令行选项可用于 Sysprep：
1 2 3 4 5 6 7 8 9 10 11  Sysprep.exe [/oobe | /audit] [/generalize] [/mode:vm] [/reboot | /shutdown | /quit] [/quiet] [/unattend:&amp;lt;answerfile&amp;gt;]   下表列出了 Sysprep 命令行选项：
   选项 描述     /audit 重新启动计算机进入审核模式。审核模式使你可以将其他驱动程序或应用程序添加到 Windows。你还可以在将 Windows 安装发送给最终用户前对其进行测试。例如：   Sysprep /audit 如果指定了应答文件，则 Windows 安装程序的审核模式将运行 auditSystem 和 auditUser 配置阶段。   /generalize 准备要作为映像的 Windows 安装。Sysprep 工具会从 Windows 安装中删除所有唯一的系统信息。Sysprep 将重置安全 ID (SID)，清除所有系统还原点，并删除事件日志。例如：   Sysprep /generalize /shutdown 下次计算机启动时，将运行 specialize 配置阶段。该配置阶段将创建一个新安全 ID (SID)。   /oobe 重新启动计算机进入 OOBE 模式。例如：   Sysprep /generalize /shutdown /oobe OOBE 允许最终用户自定义其 Windows 操作系统、创建用户帐户、命名计算机和执行其他任务。Sysprep 在 OOBE 启动前，将处理应答文件中 oobeSystem 配置阶段的所有设置。   /mode:vm Windows(R) 8 的新增内容。一般化虚拟硬盘 (VHD)，这样可以将其部署为相同虚拟机 (VM) 或虚拟机监控程序上的 VHD。VM 重新启动后，该 VM 可以引导到 OOBE。例如：   Sysprep /generalize /oobe /mode:vm 仅有的适用于 VM 模式的额外交换机为“/reboot”、“/shutdown”和“/quit”。必须使用相同的硬件配置文件在虚拟机或虚拟机监控程序上部署 VHD。例如，如果你已在 Microsoft Hyper-V 中创建 VHD，仅可以使用匹配的硬件配置文件将 VHD 部署到 Microsoft Hyper-V VM。使用不同的硬件配置文件将 VHD 部署到不同的 VM 可能会导致意外的问题。   /reboot 重新启动计算机。可以使用该选项审核计算机并确保首次运行体验正确工作。   /shutdown 在 sysprep 命令完成运行后关闭计算机。   /quiet 运行 Sysprep 工具而不显示屏幕确认消息。如果自动运行 Sysprep 工具，则可以使用该选项。   /quit Sysprep 运行指定命令后，无需重新启动或关闭计算机即可关闭 Sysprep 工具。   /unattend: 在无人参与的安装过程中，将应答文件中的设置应用到 Windows，其中  指定要使用的应答文件的路径和文件名。例如：Sysprep /audit /reboot /unattend:F:\Unattend.</description>
    </item>
    
    <item>
      <title>cmd命令行修改windows虚拟内存pagefile.sys</title>
      <link>https://sy123.ml/2020/01/20/cmd%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%BF%AE%E6%94%B9windows%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98pagefile.sys/</link>
      <pubDate>Mon, 20 Jan 2020 05:36:05 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/01/20/cmd%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%BF%AE%E6%94%B9windows%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98pagefile.sys/</guid>
      <description>1 2 3 4 5 6 7 8 9 10 11 12  # 查看当前设置 wmic pagefile list /format:list # 取消自动管理分页文件大小 wmic computersystem where name=&amp;#34;%computername%&amp;#34; set AutomaticManagedPagefile=False  # 修改页面文件大小 最小1024MB，最大4096MB wmic pagefileset where name=&amp;#34;C:\\pagefile.sys&amp;#34; set InitialSize=1024,MaximumSize=4096 # 重启生效 shutdown -r -t 0   </description>
    </item>
    
    <item>
      <title>ArchLinux配置Samba服务与Windows共享文件</title>
      <link>https://sy123.ml/2020/01/19/archlinux%E9%85%8D%E7%BD%AEsamba%E6%9C%8D%E5%8A%A1%E4%B8%8Ewindows%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6/</link>
      <pubDate>Sun, 19 Jan 2020 15:43:57 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/01/19/archlinux%E9%85%8D%E7%BD%AEsamba%E6%9C%8D%E5%8A%A1%E4%B8%8Ewindows%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6/</guid>
      <description>由于最近加班，俺的高清下载机中，已经累积了200G+的高清电影了，嘿嘿，看来平时的带宽没浪费，充分利用了。在这之前，由于懒于配置Samba，我都是偷懒，用的SFTP，通过Linux帐号来登录下载机，然后把要看的电影，一个一个的用SFTP的方式，给拖到我的电脑上，再欣赏。其实这样的效率挺低的，而且又浪费硬盘，又浪费时间。
Linux的Samba，为Linux与Linux之间，还有Linux与Windows之间，提供了一种很好的文件共享的方式。周末了，抽了点时间，把Samba给配置好了。这样，就可以直接在我的电脑上，通过共享目录的方式，来访问高清下载机中的高清电影了，还可以直接播放，方便多了……
下面记录一下ArchLinux中配置Samba的过程，留作备份。
首先，是安装Samba，ArchLinux可以直接从源中获取并安装Samba：
1  pacman -S samba   等待数秒，安装成功后，你会在/etc中找到一个叫samba的目录，进入这个目录，有一个默认的配置文件样本，叫做smb.conf.default。这是官方的范本配置文件，里面有详细的注释，和每一个配置项的解释。不过这文件挺长，建议你有空的时候，可以详细看看每个参数的含义。这里俺就不累述了，还是来个简洁点的配置吧：
在/etc/samba目录中，直接建立一个空的smb.conf，然后将如下内容粘贴过去：
1 2 3 4 5 6 7 8 9 10 11  [global] workgroup = WORKGROUP security = user [Movies] path = /home/transmission/Downloads valid users = samba public = no writable = yes printable = no create mask = 0644   这个够简洁了吧？简单说明一下，global配置节，是一个全局配置节，里面配置了两项：
workgroup，这个顾名思义，计算机的工作组名称，比如我是和我的Win7来共享文件，最好把工作组和我的Win7设成通一个工作组，这样方便Win7通过网络发现来找到我的下载机。这里，我的win7工作组名字，就叫做：WORKGROUP了
security，这是指共享目录的安全认证形式，security的值，有两种可以设置：
第一种，是设成上面例子中的user，意思是在访问共享目录的时候，需要通过用户名和密码的方式来认证，可以给共享目录提供一定的安全性保护。
第二种，是设成share，这样的话，网络中的任何人都可以通过共享目录的方式来访问你共享的内容了。
在这里，我选择了用户名与密码认证的方式，所以设成了user
下面的Movies节点，可以有多个(如果你想设置多个共享目录的话)
[Movies] 这里设置的名字，就是能够在Windows中看到的名字，可以随意更改
下面的path，就是你想共享的Linux目录了，我设成了我的Transmission的下载目录。
后面的valid users，是一个用户帐号，也即通过用户名和密码来访问共享目录的那个帐号，如果你把security设成share，这一项可以去掉。
下面是一些权限的设置，以及是否允许访问者有写入共享目录的权限，各个参数可以查看Samba文档，就不一一介绍了。
最后，说一下security设成user后，帐号的设置问题。
首先，你可以添加一个新的Linux帐号，专门用来访问共享目录用。比如，我就添加了一个帐号，叫做Samba</description>
    </item>
    
    <item>
      <title>iptables 禁止端口和开放端口</title>
      <link>https://sy123.ml/2020/01/17/iptables-%E7%A6%81%E6%AD%A2%E7%AB%AF%E5%8F%A3%E5%92%8C%E5%BC%80%E6%94%BE%E7%AB%AF%E5%8F%A3/</link>
      <pubDate>Fri, 17 Jan 2020 22:35:49 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/01/17/iptables-%E7%A6%81%E6%AD%A2%E7%AB%AF%E5%8F%A3%E5%92%8C%E5%BC%80%E6%94%BE%E7%AB%AF%E5%8F%A3/</guid>
      <description>1.首先介绍一下指令和相关配置文件 启动指令:service iptables start
重启指令:service iptables restart
关闭指令:service iptables stop
然后是相关配置:/etc/sysconfig/iptables
如何操作该配置呢？
vim /etc/sysconfig/iptables
然后进去修改即可，修改完了怎么办？这里很多人会想到/etc/rc.d/init.d/iptables save指令，但是一旦你这么干了你刚才的修改内容就白做了。。。
具体方法是：
只修改/etc/sysconfig/iptables 使其生效的办法是修改好后先service iptables restart，然后才调用/etc/rc.d/init.d/iptables save，
因为/etc/rc.d/init.d/iptables save会在iptables服务启动时重新加载，要是在重启之前直接先调用了/etc/rc.d/init.d/iptables save那么你
的/etc/sysconfig/iptables 配置就回滚到上次启动服务的配置了，这点必须注意！！！
2.下面介绍一些指令用法（主要还是man iptables看下相关资料才行）
-A：指定链名
-p：指定协议类型
-d：指定目标地址
&amp;ndash;dport：指定目标端口（destination port 目的端口）
&amp;ndash;sport：指定源端口（source port 源端口）
-j：指定动作类型
3.如果我不像修改文件直接打命令可以吗，当然没问题，步骤如下:
例如我给SSH加放行的语句：
添加input记录： iptables -A INPUT -p tcp &amp;ndash;dport 22 -j ACCEPT
添加output记录： iptables -A OUTPUT -p tcp &amp;ndash;sport 22 -j ACCEPT
最后注意需要再执行一下 /etc/init.d/iptables save，这样这两条语句就保存到刚才那个/etc/sysconfig/iptables 文件中了。
4.接下来说明一下步骤，如果机器不在我身边，我只能SSH进去做iptables规则，那么我必须注意每一步，千万别搞错了，否则就SSH链接不上都有可能！
首先要做的是给咱的SSH进行ACCEPT配置，以免直接无法连接的情况发生:
1.如果SSH端口是22（这里不建议用默认端口最好改掉SSH端口）
iptables -A INPUT -p tcp &amp;ndash;dport 22 -j ACCEPT</description>
    </item>
    
    <item>
      <title>批处理关闭或开启NETBIOS</title>
      <link>https://sy123.ml/2020/01/17/%E6%89%B9%E5%A4%84%E7%90%86%E5%85%B3%E9%97%AD%E6%88%96%E5%BC%80%E5%90%AFnetbios/</link>
      <pubDate>Fri, 17 Jan 2020 19:23:06 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/01/17/%E6%89%B9%E5%A4%84%E7%90%86%E5%85%B3%E9%97%AD%E6%88%96%E5%BC%80%E5%90%AFnetbios/</guid>
      <description>禁用NETBIOS后，局域网内计算机不可以在地址栏用主机名访问你的主机，更安全。
以下为批处理自动关闭netbios脚本:
1 2 3 4 5 6 7 8 9 10 11 12  @echo off rem off_netbios_Self_Del for /L %%a in (1,1,20) do ( wmic nicconfig where index=&amp;#39;%%a&amp;#39; call settcpipnetbios 2 ) cd /d %~dp0 if exist one_time.cmd ( del /f /q %0 exit ) rename %0 one_time.cmd exit   功能: 一键关闭netbios，执行完第二次后自己删除自己。
适用性:， 在win7及win2008测试通过，其它系统没测。
说明: 用法：复制上述脚本随便起个名，扩展名改为bat或者cmd。最好把文件放到开机启动目录，开机就运行。windows下自启动目录如下： C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Startup
如何开启NETBIOS? 把上述代码第四行最后数字改为1即为开启，改为0即为默认设置，为2时代表关闭（上述代码已默认设为关闭NETBIOS)。
为何要第二次才删除？ 如果是新装或者复制了系统，第一次开机是检测并安装网卡设备。如果未安装完网卡就运行完脚本，那脚本就发挥不了作用。
运行流程： 在运行第一次的时候会自动把本脚本重命名为one_time.cmd 在第二次运行脚本监测到有one_time.cmd文件后会自我删除。 本脚本用for循环20次，每个网卡都尝试关闭NETBIOS,（一般系统有十多个网卡序号）如果不够（不放心）就就把第三行代码由数字20改为30或更多。如果想要查看自己的网卡序号可以在CMD里输入以下命令：wmic nicconfig Get Caption,index</description>
    </item>
    
    <item>
      <title>玩转WSL-用Samba服务替代Win10原生的文件共享</title>
      <link>https://sy123.ml/2020/01/17/%E7%8E%A9%E8%BD%ACwsl-%E7%94%A8samba%E6%9C%8D%E5%8A%A1%E6%9B%BF%E4%BB%A3win10%E5%8E%9F%E7%94%9F%E7%9A%84%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB/</link>
      <pubDate>Fri, 17 Jan 2020 18:57:51 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/01/17/%E7%8E%A9%E8%BD%ACwsl-%E7%94%A8samba%E6%9C%8D%E5%8A%A1%E6%9B%BF%E4%BB%A3win10%E5%8E%9F%E7%94%9F%E7%9A%84%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB/</guid>
      <description>习惯了Linux系统的人们，肯定觉得Samba服务更加灵活和方便，那如何在Windows系统上搭建高效的Samba服务呢？本文介绍了通过WSL在Win10系统上，搭建Samba文件共享服务。
背景是家里只有一个台式机，一方面家里人偶尔使用，另一方面，它是家里的数据中心，挂载了多块硬盘。所以系统用的是Windows10，但是为了方便灵活得进行文件共享，一直考虑搭建Samba服务。达到此目的的方案有多种，可以考虑用虚拟机，例如：VMWare、VirtualBox、Hyper-V，也可以考虑使用CygWin，因为Windows10提供了WSL，所以本文介绍了另一种方式，也是运行效率比较高的一种方式，使用WSL搭建Samba服务。
背景知识 Windows文件共享服务 使用网络对外提供文件访问服务，现在广泛用于局域网内部文件的共享，例如：小米盒子、手机、PC机、包括Mac，通过139或445端口。
139 - 早期Windows的SMB运行于NBT（NetBIOS over TCP/IP）上，使用139端口 445 - Windows2000及以上版本，SMB可以直接运行与TCP/IP上，使用445端口，效率更高 对不同版本的Windows做了抓包测试，发现WinXP只访问139端口，Win7同时访问139与445端口，Win10只访问445端口，测试结果如下：
Windows10 win10-err
win10-pkg
Windows7 win7-err
win7-pkg
WindowsXP winxp-err
winxp-pkg
WSL（Windows Subsystem for Linux） 是在Windows10系统上，对Windows内核进行了封装，使其可以直接支持ELF格式的Linux可执行程序，感觉有点像GNU/Windows。 现在基于WSL，已经有了多个Linux发行版，包括Ubuntu、Debian、Suse、Kali等，能够非常方便得在Windows里面运行Linux发行版，学习和使用各种Linux工具，同时也能够将Linux里面各种服务无缝集成到Windows环境中，例如：Samba服务、SSH服务等
Samba服务 为了实现UNIX、Linux等非Windows能够访问Windows的文件共享资源，之前有个大牛将SMB（Server Message Block）协议进行了逆向分析，然后根据逆向分析的协议开发了一套开源软件Samba，可以让UNIX、Linux、Mac等系统能够与Windows之间进行文件共享。目前最新的Samba甚至可以提供AD、DC等服务。
总体方案 根据以上背景知识，在Windows10上通过WSL搭建Samba服务的方案如下：
释放Windows占用的139，445端口 安装WSL和Ubuntu发行版 安装Samba服务，并且配置 更改防火墙配置 最后测试 实施步骤 释放Windows占用的139，445端口 释放139端口 安装完毕的Windows10系统，默认情况下会监听139与445端口，通过netstat -a|findstr LISTENING可以查看： cmd001 禁用NetBIOS over TCP/IP，通过如下操作禁用，在“更改适配器设置”界面，双击对应网卡，打开“以太网状态”界面： netbios001 点击“属性”打开“以太网属性”界面： netbios002 选中“TCP/IPv4”项目，点击“属性”，打开“TCP/IPv4属性”界面： netbios003 点击“高级”并选中“WINS”页签，勾选“禁用TCP/IP上的NetBIOS”： 点击“确定”以后生效，如果有多块网卡，每块网卡都要按照如上步骤操作，操作完毕以后，还是通过netstat命令进行查看，发现139端口已经不再监听。 netbios005 释放445端口 通过“WIN+R”打开运行窗口，输入：services.msc，打开服务管理界面： services001 找到Computer Browser服务，双击该服务打开属性界面，将“启动类型”修改为禁用，并且直接点击“停止”： services002 找到Server服务： services003 双击Server服务，打开属性界面，将“启动类型”修改为禁用，并且直接点击“停止”： services004 设置完毕以后重启系统。 重启完毕以后，再通过netstat -a|findstr LISTENING命令检查端口使用情况，发现445端口已经释放成功。 cmd002 安装WSL和Ubuntu发行版 在“程序和功能”管理界面，点击“启用或关闭Windows功能”，在“Windows功能”列表中，勾选“适用于Linux的Windows子系统”（注意：不同的Windows版本可能名字有所差别，我试验的是17134.</description>
    </item>
    
    <item>
      <title>Windows 下使用 Diskpart 命令分区</title>
      <link>https://sy123.ml/2020/01/16/windows-%E4%B8%8B%E4%BD%BF%E7%94%A8-diskpart-%E5%91%BD%E4%BB%A4%E5%88%86%E5%8C%BA/</link>
      <pubDate>Thu, 16 Jan 2020 22:27:22 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/01/16/windows-%E4%B8%8B%E4%BD%BF%E7%94%A8-diskpart-%E5%91%BD%E4%BB%A4%E5%88%86%E5%8C%BA/</guid>
      <description>Diskpart 命令简介 Diskpart 命令是 Windows 环境下的一个命令，利用 Diskpart 可实现对硬盘的分区管理，包括创建分区、删除分区、合并（扩展）分区，设置分区后即刻生效，免去了重启电脑的操作。
正常运行该命令时需要系统服务的支持，所以在纯 DOS、XP 内核的 WinPE 环境下都是不能运行的，但是在 Win7 的预安装环境下却是可以的。利用 Diskpart 命令来分区，既不用借助第三方工具，也不会产生 100MB 的“系统保留”分区，其次分区操作直接设置即刻生效，不用重新启动计算机。
利用 Diskpart 命令分区 当安装程序运行到创建磁盘分区界面时按下 Shift+F10 启动命令窗口。
键入 Diskpart 进入 Diskpart 的命令环境，其提示符为 DISKPART&amp;gt;。
在此提示下键入相应命令就可以进行分区操作，具体用到的命令有：
1 2 3 4 5 6  Clean List Select Create Format Exit   这些命令的使用方法可以在 Diskpart 命令提示符下键入 Help 或者通过网络查询，如果不清楚可以查看。
使用 List Disk 命令显示的目标磁盘若为 1 号，则建立分区的步骤如下：以下是命令顺序及操作解释：
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  List Disk：显示本机的所有磁盘，以便正确操作目标磁盘 Select Disk 1：选择 0 号磁盘 Clean ：清除 0 号磁盘上的所有分区 Create Partition Primary Size=512000 ：创建主分区，容量为：512000MB Active：激活主分区 Format Quick：快速格式化当前分区 Create Partition Extended：创建扩展分区 Create Partition Logical Size=512000：创建逻辑分区一，容量为：512000MB Format Quick：快速格式化当前分区 Create Partition Logical Size=512000：创建逻辑分区二，容量为：512000MB Format Quick ：快速格式化当前分区 Create Partition Logical ：创建逻辑分区三，大小为剩余的容量 Format Quick ：快速格式化当前分区 Exit ：退出Diskpart命令环境 Exit ：退出命令窗口   这里要注意的是 Diskpart 分区时，一定要选对目标磁盘，当前被选中的磁盘 / 分区前面会有 * 号标志，可以用 List Disk / Partition 来进行查看。</description>
    </item>
    
    <item>
      <title>Linux 让终端走代理的几种方法</title>
      <link>https://sy123.ml/2020/01/11/linux-%E8%AE%A9%E7%BB%88%E7%AB%AF%E8%B5%B0%E4%BB%A3%E7%90%86%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95/</link>
      <pubDate>Sat, 11 Jan 2020 16:00:15 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/01/11/linux-%E8%AE%A9%E7%BB%88%E7%AB%AF%E8%B5%B0%E4%BB%A3%E7%90%86%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95/</guid>
      <description>最近使用终端git的时候觉得速度有点慢，考虑一下是不是可以通过让终端走代理的方式来加快速度，尝试了一下以后确实是可以的。如果只是为了设置git的话可以直接在文章最后找到git的设置代理的方法。
前期准备: 认识代理的方式:代理是通过客户端与服务端通信,传输服务端能够访问到的资源文件,再由服务端客户端通信返回给客户端,从而间接访问服务端能访问的资源.
以socket5通信为例子,我们通过客户端(自己想一想酸酸乳)向服务端发送socket通信,服务端访问资源再由socket通信返回给客户端.但是这里面的通信设置必须通过端口来进行通信,类似switchyomega设置过程一样,我们会设定走的代理方式是127.0.0.1:1080;这个意思就是通过本地的1080端口来进行通信.具体在终端上如何使用呢?
如果默认是socket5通信且端口是1080,即127.0.01:1080的方式 使用如下两种方式
socks5://127.0.0.1:1080 这里无关自己代理客户端是不是酸酸乳或酸酸只要是通过socket通信即可,前提是满足已经能够正常代理访问.
第二种是http代理,即通信方式为http而不是socket http://127.0.0.1:12333 详细举例:
这里的客户端有两种方式,一个是socket通信,一个是http通信,两个方式对应的端口不同,在下文中不同代理方式设置的端口也不同. 实在不懂的记住:先把代理调试通,然后就直接打开switchyomega看看自己的设置,都是一样的
方法一：（推荐使用） 为什么说这个方法推荐使用呢？因为他只作用于当前终端中，不会影响环境，而且命令比较简单 在终端中直接运行：
1  export http_proxy=http://proxyAddress:port   如果你是SSR,并且走的http的代理端口是12333，想执行wget或者curl来下载国外的东西，可以使用如下命令：
1  export http_proxy=http://127.0.0.1:12333   如果是https那么就经过如下命令：
1  export https_proxy=http://127.0.0.1:12333   方法二 ： 这个办法的好处是把代理服务器永久保存了，下次就可以直接用了 把代理服务器地址写入shell配置文件.bashrc或者.zshrc 直接在.bashrc或者.zshrc添加下面内容
1 2  export http_proxy=&amp;#34;http://localhost:port&amp;#34; export https_proxy=&amp;#34;http://localhost:port&amp;#34;   或者走socket5协议（ss,ssr）的话，代理端口是1080
1 2  export http_proxy=&amp;#34;socks5://127.0.0.1:1080&amp;#34; export https_proxy=&amp;#34;socks5://127.0.0.1:1080&amp;#34;   或者干脆直接设置ALL_PROXY
1  export ALL_PROXY=socks5://127.0.0.1:1080   最后在执行如下命令应用设置
1  source ~/.</description>
    </item>
    
    <item>
      <title>百度云分享下载链接</title>
      <link>https://sy123.ml/2020/01/10/%E7%99%BE%E5%BA%A6%E4%BA%91%E5%88%86%E4%BA%AB%E4%B8%8B%E8%BD%BD%E9%93%BE%E6%8E%A5/</link>
      <pubDate>Fri, 10 Jan 2020 07:48:32 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/01/10/%E7%99%BE%E5%BA%A6%E4%BA%91%E5%88%86%E4%BA%AB%E4%B8%8B%E8%BD%BD%E9%93%BE%E6%8E%A5/</guid>
      <description>最好是先复制到自己的网盘。
  点击分享，生成链接。
  点击链接，进入页面。在console模式下输入如下代码：
  1 2 3 4 5 6 7 8 9  $.ajax({ type: &amp;#34;POST&amp;#34;, url: &amp;#34;/api/sharedownload?sign=&amp;#34;+yunData.SIGN+&amp;#34;&amp;amp;timestamp=&amp;#34;+yunData.TIMESTAMP, data: &amp;#34;encrypt=0&amp;amp;product=share&amp;amp;uk=&amp;#34;+yunData.SHARE_UK+&amp;#34;&amp;amp;primaryid=&amp;#34;+yunData.SHARE_ID+&amp;#34;&amp;amp;fid_list=%5B&amp;#34;+yunData.FS_ID+&amp;#34;%5D&amp;#34;, dataType: &amp;#34;json&amp;#34;, success: function(d){ window.location.href = d.list[0].dlink; } });   客户端接口加密算法</description>
    </item>
    
    <item>
      <title>Github Pull</title>
      <link>https://sy123.ml/2020/01/08/github-pull/</link>
      <pubDate>Wed, 08 Jan 2020 06:27:26 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/01/08/github-pull/</guid>
      <description>github一直都是在上面拿资源。感觉有点愧对大众。是不是应该奉献自己的力量给github来推动开源的发展呢。 在两个月前第一次在github新建项目，并且push了一套比赛的源码。但。。。今天竟然忘了怎么用git了。又复习了一次。所以这次打算在这里作个笔记。给自己做个的或是给git新手做的也好吧。为互联网贡献一点力量。
安装git和配置就不说了。
进入到等下要push的代码的目录文件夹，打开bash 请输入图片描述
进入到等下要push的代码的目录文件夹，打开bash 请输入图片描述
初始化 1  git init   初始化后在本地代码库会自动创建一个.git隐藏文件，这个就是本地代码库
加载文件 1  git add .   . 是把文件夹里面的所有文件都加载进来
还可以单个加载
1  git add index.html,test.html   四：
提交文件，创建时间点 1  git commit -m &amp;#34;init commit&amp;#34;   -m &amp;ldquo;这里的文件是注释&amp;rdquo;
创建之后可以随时回到这个时间点，可以看到有4个文件被修改了，47个插入，51个删除 请输入图片描述
可以随时用
1  git status   查看git的状态
推送代码 第一次推送的时候要添加远程的代码库到配置
1  git remote add origin master https://github.com/zhong635725959/droplook.git   origin可变，随自己喜欢
推送代码：</description>
    </item>
    
  </channel>
</rss>