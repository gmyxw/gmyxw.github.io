<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>react on sy123.ml</title>
    <link>https://sy123.ml/tags/react/</link>
    <description>Recent content in react on sy123.ml</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>2007-2020 Zhili.</copyright>
    <lastBuildDate>Thu, 27 Feb 2020 07:03:10 +0800</lastBuildDate>
    
	<atom:link href="https://sy123.ml/tags/react/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Tippy_warning</title>
      <link>https://sy123.ml/2020/02/27/tippy_warning/</link>
      <pubDate>Thu, 27 Feb 2020 07:03:10 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/02/27/tippy_warning/</guid>
      <description>I have the folowing part of code:
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  private rootRef = React.createRef&amp;lt;HTMLDivElement&amp;gt;(); const target = ( &amp;lt;div&amp;gt; &amp;lt;Icon design=&amp;#39;accepted&amp;#39; size=&amp;#39;xl&amp;#39; /&amp;gt; &amp;lt;/div&amp;gt; ); return ( &amp;lt;React.Fragment&amp;gt; {React.cloneElement(target, { ref: this.rootRef, onMouseOver: this.handleMouseOver, onMouseLeave: this.handleMouseLeave, })} {open &amp;amp;&amp;amp; this.renderTooltip()} &amp;lt;/React.Fragment&amp;gt; );   When target with div element (or any other instead of div) everything is ok, but when target is:</description>
    </item>
    
    <item>
      <title>出现value.locale is not a function问题解决办法</title>
      <link>https://sy123.ml/2020/02/26/react_datepicker/</link>
      <pubDate>Wed, 26 Feb 2020 15:28:15 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/02/26/react_datepicker/</guid>
      <description>给datepicker赋值 可以输出赋值,datepicker赋值需要moment格式的数据,如果赋值了string类型的会报错 需要进行moment格式化moment(dateString)
给普通字符串赋值 如果赋值了moment类型的数据 可以通过moment(date).format(XXX)来解决,如果还不行的话可以使用date&amp;amp;&amp;amp; moment(date).lacale(‘en’).format(XXX)</description>
    </item>
    
    <item>
      <title>Saga deprecated 警告</title>
      <link>https://sy123.ml/2020/02/15/saga_deprecated_warning/</link>
      <pubDate>Sat, 15 Feb 2020 22:23:37 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/02/15/saga_deprecated_warning/</guid>
      <description>What happens? 1  [...effects] has been deprecated in favor of all([...effects]), please update your code   it does not effect dva.js, its redux saga api update, you just need to do this
1 2 3 4 5  effects: { * query(action, {call, put, all}) { yield all([]) } }   Redux saga apis:</description>
    </item>
    
    <item>
      <title>umi-ui bug using react-document-title</title>
      <link>https://sy123.ml/2020/02/10/umi-ui_bug_using_react-document-title/</link>
      <pubDate>Mon, 10 Feb 2020 15:41:37 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/02/10/umi-ui_bug_using_react-document-title/</guid>
      <description>背景 React 项目使用umi时发报：
 Uncaught Invariant Violation: React.Children.only expected to receive a single React element child. The above error occurred in the  component ui socket init CloseEvent {type: &amp;ldquo;close&amp;rdquo;, bubbles: false, cancelable: false, timeStamp: 1571127775342, wasClean: false, …}
 异常代码 1 2 3 4 5  &amp;lt;DocumentTitle title={this.renderPageTitle()}&amp;gt; &amp;lt;ContainerQuery query={query}&amp;gt; {(params: any) =&amp;gt; &amp;lt;div className={classNames(params)}&amp;gt;{layout}&amp;lt;/div&amp;gt;} &amp;lt;/ContainerQuery&amp;gt; &amp;lt;/DocumentTitle&amp;gt;   DocumentTitle组件内部最外层只能接受一个元素，而代码中有多个元素，所以报错。
解决方案 用&amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;或者&amp;lt;&amp;gt;&amp;lt;/&amp;gt;在外部包裹后就OK，不再报错，页面可正常显示。</description>
    </item>
    
    <item>
      <title>Programmatically_navigate_using_react_router</title>
      <link>https://sy123.ml/2020/02/09/programmatically_navigate_using_react_router/</link>
      <pubDate>Sun, 09 Feb 2020 11:33:00 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/02/09/programmatically_navigate_using_react_router/</guid>
      <description>React Router v5.1.0 with hooks There is a new useHistory hook in React Router &amp;gt;5.1.0 if you are using React &amp;gt;16.8.0 and functional components.
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  import { useHistory } from &amp;#34;react-router-dom&amp;#34;; function HomeButton() { const history = useHistory(); function handleClick() { history.push(&amp;#34;/home&amp;#34;); } return ( &amp;lt;button type=&amp;#34;button&amp;#34; onClick={handleClick}&amp;gt; Go home &amp;lt;/button&amp;gt; ); }   React Router v4 With v4 of React Router, there are three approaches that you can take to programmatic routing within components.</description>
    </item>
    
  </channel>
</rss>