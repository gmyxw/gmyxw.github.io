<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>WSL on zhili</title>
    <link>https://sy123.ml/tags/wsl/</link>
    <description>Recent content in WSL on zhili</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>2007-2020 zhili.</copyright>
    <lastBuildDate>Fri, 17 Jan 2020 18:57:51 +0800</lastBuildDate><atom:link href="https://sy123.ml/tags/wsl/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>玩转WSL-用Samba服务替代Win10原生的文件共享</title>
      <link>https://sy123.ml/2020/01/17/%E7%8E%A9%E8%BD%ACwsl-%E7%94%A8samba%E6%9C%8D%E5%8A%A1%E6%9B%BF%E4%BB%A3win10%E5%8E%9F%E7%94%9F%E7%9A%84%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB/</link>
      <pubDate>Fri, 17 Jan 2020 18:57:51 +0800</pubDate>
      
      <guid>https://sy123.ml/2020/01/17/%E7%8E%A9%E8%BD%ACwsl-%E7%94%A8samba%E6%9C%8D%E5%8A%A1%E6%9B%BF%E4%BB%A3win10%E5%8E%9F%E7%94%9F%E7%9A%84%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB/</guid>
      <description>习惯了Linux系统的人们，肯定觉得Samba服务更加灵活和方便，那如何在Windows系统上搭建高效的Samba服务呢？本文介绍了通过WSL在Win10系统上，搭建Samba文件共享服务。
背景是家里只有一个台式机，一方面家里人偶尔使用，另一方面，它是家里的数据中心，挂载了多块硬盘。所以系统用的是Windows10，但是为了方便灵活得进行文件共享，一直考虑搭建Samba服务。达到此目的的方案有多种，可以考虑用虚拟机，例如：VMWare、VirtualBox、Hyper-V，也可以考虑使用CygWin，因为Windows10提供了WSL，所以本文介绍了另一种方式，也是运行效率比较高的一种方式，使用WSL搭建Samba服务。
背景知识 Windows文件共享服务 使用网络对外提供文件访问服务，现在广泛用于局域网内部文件的共享，例如：小米盒子、手机、PC机、包括Mac，通过139或445端口。
139 - 早期Windows的SMB运行于NBT（NetBIOS over TCP/IP）上，使用139端口 445 - Windows2000及以上版本，SMB可以直接运行与TCP/IP上，使用445端口，效率更高 对不同版本的Windows做了抓包测试，发现WinXP只访问139端口，Win7同时访问139与445端口，Win10只访问445端口，测试结果如下：
Windows10 win10-err
win10-pkg
Windows7 win7-err
win7-pkg
WindowsXP winxp-err
winxp-pkg
WSL（Windows Subsystem for Linux） 是在Windows10系统上，对Windows内核进行了封装，使其可以直接支持ELF格式的Linux可执行程序，感觉有点像GNU/Windows。 现在基于WSL，已经有了多个Linux发行版，包括Ubuntu、Debian、Suse、Kali等，能够非常方便得在Windows里面运行Linux发行版，学习和使用各种Linux工具，同时也能够将Linux里面各种服务无缝集成到Windows环境中，例如：Samba服务、SSH服务等
Samba服务 为了实现UNIX、Linux等非Windows能够访问Windows的文件共享资源，之前有个大牛将SMB（Server Message Block）协议进行了逆向分析，然后根据逆向分析的协议开发了一套开源软件Samba，可以让UNIX、Linux、Mac等系统能够与Windows之间进行文件共享。目前最新的Samba甚至可以提供AD、DC等服务。
总体方案 根据以上背景知识，在Windows10上通过WSL搭建Samba服务的方案如下：
释放Windows占用的139，445端口 安装WSL和Ubuntu发行版 安装Samba服务，并且配置 更改防火墙配置 最后测试 实施步骤 释放Windows占用的139，445端口 释放139端口 安装完毕的Windows10系统，默认情况下会监听139与445端口，通过netstat -a|findstr LISTENING可以查看： cmd001 禁用NetBIOS over TCP/IP，通过如下操作禁用，在“更改适配器设置”界面，双击对应网卡，打开“以太网状态”界面： netbios001 点击“属性”打开“以太网属性”界面： netbios002 选中“TCP/IPv4”项目，点击“属性”，打开“TCP/IPv4属性”界面： netbios003 点击“高级”并选中“WINS”页签，勾选“禁用TCP/IP上的NetBIOS”： 点击“确定”以后生效，如果有多块网卡，每块网卡都要按照如上步骤操作，操作完毕以后，还是通过netstat命令进行查看，发现139端口已经不再监听。 netbios005 释放445端口 通过“WIN+R”打开运行窗口，输入：services.msc，打开服务管理界面： services001 找到Computer Browser服务，双击该服务打开属性界面，将“启动类型”修改为禁用，并且直接点击“停止”： services002 找到Server服务： services003 双击Server服务，打开属性界面，将“启动类型”修改为禁用，并且直接点击“停止”： services004 设置完毕以后重启系统。 重启完毕以后，再通过netstat -a|findstr LISTENING命令检查端口使用情况，发现445端口已经释放成功。 cmd002 安装WSL和Ubuntu发行版 在“程序和功能”管理界面，点击“启用或关闭Windows功能”，在“Windows功能”列表中，勾选“适用于Linux的Windows子系统”（注意：不同的Windows版本可能名字有所差别，我试验的是17134.</description>
    </item>
    
  </channel>
</rss>
